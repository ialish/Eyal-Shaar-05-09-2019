{"version":3,"sources":["components/FavoritesButton/HeartHollow.svg","components/Navigation/Navigation.js","components/HandleError.js","components/SearchField/SearchField.js","actions.js","actionTypes.js","components/FavoritesButton/FavoritesButton.js","components/CurrentWeather/CurrentWeather.js","components/FiveDayForecast/FiveDayForecast.js","components/WeatherDetails/WeatherDetails.js","components/Favorites/Favorites.js","containers/App.js","serviceWorker.js","reducers.js","index.js","components/FavoritesButton/HeartFull.svg"],"names":["module","exports","Navigation","onRouteChange","route","Nav","className","defaultActiveKey","Item","Link","eventKey","onClick","HandleError","name","description","useState","show","setShow","Toast","onClose","Header","Body","AsyncTypeahead","asyncContainer","Typeahead","SearchField","onChange","selectedOptions","props","onLocationChange","key","Key","city","LocalizedName","clearRequest","setTimeout","refs","SubjectTypeahead","getInstance","clear","fetchError","mistype","this","query","onInputChange","onSearch","isLoading","options","error","match","id","ref","placeholder","labelKey","React","Component","connect","state","changeInput","dispatch","type","payload","updateInput","url","process","fetch","then","response","json","message","data","requestSearchOptions","FavoritesButton","handleHeartImage","favCities","find","element","location","heartImage","HeartHollow","setState","HeartFull","addRemoveCity","array","push","index","findIndex","splice","JSON","parse","localStorage","getItem","setItem","stringify","src","alt","width","Button","variant","size","apiKey","CurrentWeather","fetchForecast","resp","degreesC","Temperature","Metric","Value","weatherText","WeatherText","catch","err","prevProps","Math","round","FiveDayForecast","DailyForecasts","days","map","day","Card","Title","Date","EpochDate","getDay","Subtitle","Minimum","Maximum","WeatherDetails","Alert","Favorites","fetchData","favCitiesData","forEach","handleOnClick","cityData","length","cards","App","onRequestCurrentPosition","changeRoute","isPending","changeLocation","setRoute","setLocation","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","Boolean","window","hostname","initialStateRoute","initialStateLocation","initialStateInput","logger","createLogger","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a59539aa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/HeartHollow.4ed65843.svg\";","import React from 'react';\r\nimport './Navigation.css';\r\nimport { Nav } from 'react-bootstrap';\r\n\r\nconst Navigation = ({ onRouteChange, route }) => {\r\n\treturn (\r\n\t\t<Nav className=\"justify-content-end nav-bar\" defaultActiveKey={route}>\r\n\t\t\t<Nav.Item>\r\n\t\t\t\t<Nav.Link eventKey=\"home\" onClick={() => onRouteChange('home')}>\r\n\t\t\t\t\tHome\r\n\t\t\t\t</Nav.Link>\r\n\t\t\t</Nav.Item>\r\n\t\t\t<Nav.Item>\r\n\t\t\t\t<Nav.Link eventKey=\"favorites\" onClick={() => onRouteChange('favorites')}>\r\n\t\t\t\t\tFavorites\r\n\t\t\t\t</Nav.Link>\r\n\t\t\t</Nav.Item>\r\n\t\t</Nav>\r\n\t);\r\n}\r\n\r\nexport default Navigation;","import React, { useState } from 'react';\r\nimport { Toast } from 'react-bootstrap';\r\n\r\nconst HandleError = ({ name, description }) => {\r\n\tconst [show, setShow] = useState(true);\r\n\tconst toggleShow = () => setShow(!show);\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Toast show={show} onClose={toggleShow}>\r\n\t\t\t\t<Toast.Header>\r\n\t\t\t\t\t<strong className=\"mr-auto\">{name}</strong>\r\n\t\t\t\t</Toast.Header>\r\n\t\t\t\t<Toast.Body>{description}</Toast.Body>\r\n\t\t\t</Toast>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default HandleError;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { asyncContainer, Typeahead } from 'react-bootstrap-typeahead';\r\nimport HandleError from '../HandleError';\r\nimport { updateInput, requestSearchOptions } from '../../actions';\r\n\r\nimport './SearchField.css';\r\n\r\nconst AsyncTypeahead = asyncContainer(Typeahead);\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tquery: state.changeInput.query,\r\n\t\tisLoading: state.changeInput.isLoading,\r\n\t\toptions: state.changeInput.options,\r\n\t\terror: state.changeInput.error\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tonInputChange: (query) => dispatch(updateInput(query)),\r\n\t\tonSearch: (query) => dispatch(requestSearchOptions(query))\r\n\t}\r\n}\r\n\r\nclass SearchField extends React.Component {\r\n\tonChange = (selectedOptions) => {\r\n\t\tthis.props.onLocationChange({\r\n\t\t\tkey: selectedOptions[0].Key,\r\n\t\t\tcity: selectedOptions[0].LocalizedName\r\n\t\t});\r\n\r\n\t\tthis.clearRequest();\r\n\t}\r\n\t\r\n\tclearRequest = () => {\r\n\t\tsetTimeout(() => this.refs.SubjectTypeahead.getInstance().clear(), 0);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { query, onInputChange, onSearch, isLoading, options, error } = this.props;\r\n\r\n\t\tlet fetchError;\r\n\t\tif (error) {\r\n\t\t\tfetchError = (\r\n\t\t\t\t<HandleError\r\n\t\t\t\t\tname={`Error: ${error}!`}\r\n\t\t\t\t\tdescription={'Failed to fetch data from the server.'}\r\n\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\t\r\n\t\tlet mistype;\r\n\t\tconst availableChars = /^[0-9a-zA-Z]*$/;\r\n\t\tif (!query.match(availableChars)) {\r\n\t\t\tmistype = (\r\n\t\t\t\t<HandleError\r\n\t\t\t\t\tname={'Error: Mistype!'}\r\n\t\t\t\t\tdescription={'Only english letters are allowed.'}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div className='search-field'>\r\n\t\t\t\t<AsyncTypeahead\r\n\t\t\t\t\tid=\"AsyncTypeahead\"\r\n\t\t\t\t\tref=\"SubjectTypeahead\"\r\n\t\t\t\t\tplaceholder=\"Enter location\"\r\n\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\tlabelKey=\"LocalizedName\"\r\n\t\t\t\t\tonInputChange={onInputChange}\r\n\t\t\t\t\tonSearch={onSearch}\r\n\t\t\t\t\toptions={options}\r\n\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className='error-msg'>\r\n\t\t\t\t\t{ fetchError }\r\n\t\t\t\t\t{ mistype }\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchField);","import {\r\n\tSET_ROUTE,\r\n\tSET_LOCATION,\r\n\tREQUEST_CURRENT_POSITION_PENDING,\r\n\tREQUEST_CURRENT_POSITION_SUCCESS,\r\n\tREQUEST_CURRENT_POSITION_FAILED\r\n} from './actionTypes'\r\n\r\nimport {\r\n\tUPDATE_INPUT,\r\n\tREQUEST_SEARCH_OPTIONS_PENDING,\r\n\tREQUEST_SEARCH_OPTIONS_SUCCESS,\r\n\tREQUEST_SEARCH_OPTIONS_FAILED\r\n} from './actionTypes'\r\n\r\n/* App component */\r\n\r\nexport const setRoute = (route) => {\r\n\treturn {\r\n\t\ttype: SET_ROUTE,\r\n\t\tpayload: route\r\n\t}\r\n}\r\n\r\nexport const setLocation = (location) => {\r\n\treturn {\r\n\t\ttype: SET_LOCATION,\r\n\t\tpayload: location\r\n\t}\r\n}\r\n\r\nexport const requestCurrentPosition = () => {\r\n\treturn (dispatch) => {\r\n\t\tdispatch({ type: REQUEST_CURRENT_POSITION_PENDING });\r\n\t\tif (navigator.geolocation) {\r\n\t\t\tnavigator.geolocation.getCurrentPosition((position) => {\r\n\t\t\t\tconst apiKey = process.env.REACT_APP_API_KEY;\r\n\t\t\t\tconst latitude = position.coords.latitude;\r\n\t\t\t\tconst longitude = position.coords.longitude;\r\n\t\t\t\tconst url = `https://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=${apiKey}&q=${latitude}%2C${longitude}`;\r\n\t\t\t\treturn fetch(url)\r\n\t\t\t\t\t.then(\r\n\t\t\t\t\t\t(response) => response.json(),\r\n\t\t\t\t\t\t// It's not good to use catch because that will also catch any \r\n\t\t\t\t\t\t// errors in the dispatch and resulting render, causing a loop \r\n\t\t\t\t\t\t// of 'Unexpected batch number' errors.\r\n\t\t\t\t\t\t(error) => dispatch({\r\n\t\t\t\t\t\t\ttype: REQUEST_CURRENT_POSITION_FAILED,\r\n\t\t\t\t\t\t\tpayload: error.message\r\n\t\t\t\t\t\t}))\r\n\t\t\t\t\t.then((data) => dispatch({\r\n\t\t\t\t\t\ttype: REQUEST_CURRENT_POSITION_SUCCESS,\r\n\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\tkey: data.Key,\r\n\t\t\t\t\t\t\tcity: data.LocalizedName\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}));\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/* SearchField component */\r\n\r\nexport const updateInput = (query) => {\r\n\treturn {\r\n\t\ttype: UPDATE_INPUT,\r\n\t\tpayload: query\r\n\t}\r\n}\r\n\r\nexport const requestSearchOptions = (query) => {\r\n\treturn (dispatch) => {\r\n\t\tdispatch({ type: REQUEST_SEARCH_OPTIONS_PENDING });\r\n\t\tconst apiKey = process.env.REACT_APP_API_KEY;\r\n\t\tconst url = `https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${apiKey}&q=${query}`;\r\n\t\treturn fetch(url)\r\n\t\t\t.then(\r\n\t\t\t\t(response) => response.json(),\r\n\t\t\t\t(error) => dispatch({\r\n\t\t\t\t\ttype: REQUEST_SEARCH_OPTIONS_FAILED,\r\n\t\t\t\t\tpayload: error.message\r\n\t\t\t\t}))\r\n\t\t\t.then((data) => dispatch({\r\n\t\t\t\ttype: REQUEST_SEARCH_OPTIONS_SUCCESS,\r\n\t\t\t\tpayload: data\r\n\t\t\t}));\r\n\t}\r\n}","/* App component */\r\nexport const SET_ROUTE = 'SET_ROUTE';\r\nexport const SET_LOCATION = 'SET_LOCATION';\r\nexport const REQUEST_CURRENT_POSITION_PENDING = 'REQUEST_CURRENT_POSITION_PENDING';\r\nexport const REQUEST_CURRENT_POSITION_SUCCESS = 'REQUEST_CURRENT_POSITION_SUCCESS';\r\nexport const REQUEST_CURRENT_POSITION_FAILED = 'REQUEST_CURRENT_POSITION_FAILED';\r\n\r\n/* SearchField component */\r\nexport const UPDATE_INPUT = 'UPDATE_INPUT;'\r\nexport const REQUEST_SEARCH_OPTIONS_PENDING = 'REQUEST_SEARCH_OPTIONS_PENDING';\r\nexport const REQUEST_SEARCH_OPTIONS_SUCCESS = 'REQUEST_SEARCH_OPTIONS_SUCCESS';\r\nexport const REQUEST_SEARCH_OPTIONS_FAILED = 'REQUEST_SEARCH_OPTIONS_FAILED';","import React, { Component } from 'react';\r\nimport './FavoritesButton.css';\r\nimport HeartHollow from './HeartHollow.svg';\r\nimport HeartFull from './HeartFull.svg';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass FavoritesButton extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tfavCities: [],\r\n\t\t\theartImage: HeartHollow\r\n\t\t};\r\n\t}\r\n\r\n\thandleHeartImage = () => {\r\n\t\tif (this.state.favCities) {\r\n\t\t\tif (this.state.favCities.find(element =>\r\n\t\t\t\telement.key === this.props.location.key)) {\r\n\t\t\t\tif (this.state.heartImage === HeartHollow)\r\n\t\t\t\t\tthis.setState({ heartImage: HeartFull });\r\n\t\t\t} else {\r\n\t\t\t\tif (this.state.heartImage === HeartFull)\r\n\t\t\t\t\tthis.setState({ heartImage: HeartHollow });\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.setState({ favCities: JSON.parse(localStorage.getItem('Favorite Cities')) });\r\n\t\tthis.handleHeartImage();\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n\t\tthis.handleHeartImage();\r\n\t\tlocalStorage.setItem('Favorite Cities', JSON.stringify(this.state.favCities));\r\n\t}\r\n\r\n\taddRemoveCity = () => {\r\n\t\tlet array;\r\n\r\n\t\tif (this.state.favCities) {\r\n\t\t\tarray = [...this.state.favCities];\r\n\t\t} else {\r\n\t\t\tarray = [];\r\n\t\t}\r\n\t\t\r\n\t\tif (this.state.heartImage === HeartHollow) {\r\n\t\t\tarray.push(this.props.location);\r\n\t\t\tthis.setState({\r\n\t\t\t\theartImage: HeartFull,\r\n\t\t\t\tfavCities: array\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tconst index = array.findIndex(element =>\r\n\t\t\t\telement.key === this.props.location.key);\r\n\t\t\t\t\r\n\t\t\tarray.splice(index, 1);\r\n\t\t\tthis.setState({\r\n\t\t\t\theartImage: HeartHollow,\r\n\t\t\t\tfavCities: array\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='favorites-button'>\r\n\t\t\t\t<img src={this.state.heartImage} alt='Heart' width='35px'></img>\r\n\t\t\t\t<Button variant=\"outline-danger\" size=\"sm\" onClick={this.addRemoveCity}>Add to Favorites</Button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default FavoritesButton;","import React from 'react';\r\nimport './CurrentWeather.css';\r\nimport HandleError from '../HandleError';\r\n\r\nconst apiKey = process.env.REACT_APP_API_KEY;\r\n\r\nclass CurrentWeather extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcity: '',\r\n\t\t\tdegreesC: null,\r\n\t\t\tweatherText: '',\r\n\t\t\tfetchError: ''\r\n\t\t}\r\n\t}\r\n\r\n\tfetchForecast = () => {\r\n\t\tconst url = `https://dataservice.accuweather.com/currentconditions/v1/${this.props.location.key}?apikey=${apiKey}`;\r\n\r\n\t\tfetch(url)\r\n\t\t\t.then(resp => resp.json())\r\n\t\t\t.then(json => this.setState({\r\n\t\t\t\tcity: this.props.location.city,\r\n\t\t\t\tdegreesC: json[0].Temperature.Metric.Value,\r\n\t\t\t\tweatherText: json[0].WeatherText\r\n\t\t\t}))\r\n\t\t\t.catch(err => this.setState({ fetchError: err.message }));\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.fetchForecast();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tconst prevLocation = prevProps.location || {};\r\n\t\tif (prevLocation.key !== this.props.location.key) {\r\n\t\t\tthis.fetchForecast();\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet fetchError;\r\n\t\tif (this.state.fetchError) {\r\n\t\t\tfetchError = (\r\n\t\t\t\t<HandleError\r\n\t\t\t\t\tname={`Error: ${this.state.fetchError}!`}\r\n\t\t\t\t\tdescription={'Failed to fetch data from the server.'}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h5 className='city'>{this.state.city}</h5>\r\n\t\t\t\t<h6>{Math.round(this.state.degreesC)}&deg;C</h6>\r\n\t\t\t\t<h2 className='weather-text'>{this.state.weatherText}</h2>\r\n\t\t\t\t<div className='error-msg'>\r\n\t\t\t\t\t{fetchError}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default CurrentWeather;","import React from 'react';\r\nimport './FiveDayForecast.css';\r\nimport { Card } from 'react-bootstrap';\r\nimport HandleError from '../HandleError';\r\n\r\nconst apiKey = process.env.REACT_APP_API_KEY;\r\n\r\nclass FiveDayForecast extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tDailyForecasts: [],\r\n\t\t\tfetchError: ''\r\n\t\t}\r\n\t}\r\n\r\n\tfetchForecast = () => {\r\n\t\tconst url = `https://dataservice.accuweather.com/forecasts/v1/daily/5day/${this.props.location.key}?apikey=${apiKey}&metric=true`;\r\n\r\n\t\tfetch(url)\r\n\t\t\t.then(resp => resp.json())\r\n\t\t\t.then(json => this.setState({\r\n\t\t\t\tDailyForecasts: json.DailyForecasts\r\n\t\t\t}))\r\n\t\t\t.catch(err => this.setState({ fetchError: err.message }));\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.fetchForecast();\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tconst prevLocation = prevProps.location || {};\r\n\t\tif (prevLocation.key !== this.props.location.key) {\r\n\t\t\tthis.fetchForecast();\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n\t\tlet fetchError;\r\n\r\n\t\tif (this.state.fetchError) {\r\n\t\t\tfetchError = (\r\n\t\t\t\t<HandleError\r\n\t\t\t\t\tname={`Error: ${this.state.fetchError}!`}\r\n\t\t\t\t\tdescription={'Failed to fetch data from the server.'}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div className='five-day-cards'>\r\n\t\t\t\t{this.state.DailyForecasts.map((day, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Card className='five-day-card' key={index}>\r\n\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t<Card.Title className='five-day-card-title'>\r\n\t\t\t\t\t\t\t\t\t{days[new Date(day.EpochDate * 1000).getDay()]}\r\n\t\t\t\t\t\t\t\t</Card.Title>\r\n\t\t\t\t\t\t\t\t<Card.Subtitle className=\"mb-2 five-day-card-subtitle\">\r\n\t\t\t\t\t\t\t\t\t{Math.round((day.Temperature.Minimum.Value + day.Temperature.Maximum.Value) / 2)}&deg;C\r\n\t\t\t\t\t\t\t\t</Card.Subtitle>\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t\t<div className='error-msg'>\r\n\t\t\t\t\t{fetchError}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default FiveDayForecast;","import React from 'react';\r\nimport './WeatherDetails.css';\r\nimport { Alert } from 'react-bootstrap';\r\nimport FavoritesButton from '../FavoritesButton/FavoritesButton';\r\nimport CurrentWeather from '../CurrentWeather/CurrentWeather';\r\nimport FiveDayForecast from '../FiveDayForecast/FiveDayForecast';\r\n\r\nconst WeatherDetails = ({ location }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Alert className='background-box' variant={'success'}>\r\n\t\t\t\t<FavoritesButton location={location} />\r\n\t\t\t\t<CurrentWeather location={location} />\r\n\t\t\t\t<FiveDayForecast location={location} />\r\n\t\t\t</Alert>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default WeatherDetails;","import React, { Component } from 'react';\r\nimport './Favorites.css';\r\nimport { Card } from 'react-bootstrap';\r\nimport HandleError from '../HandleError';\r\n\r\nconst apiKey = process.env.REACT_APP_API_KEY;\r\n\r\nclass Favorites extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfavCitiesData: [],\r\n\t\t\tfetchError: ''\r\n\t\t};\r\n\t}\r\n\t\r\n\tfetchData = (favCities) => {\r\n\t\tlet favCitiesData = [];\r\n\t\tfavCities.forEach((location) => {\r\n\t\t\tconst url = `https://dataservice.accuweather.com/currentconditions/v1/${location.key}?apikey=${apiKey}`;\r\n\t\t\tfetch(url)\r\n\t\t\t\t.then(resp => resp.json())\r\n\t\t\t\t.then(json => {\r\n\t\t\t\t\tlet degreesC = Math.round(json[0].Temperature.Metric.Value);\r\n\t\t\t\t\tlet weatherText = json[0].WeatherText;\r\n\t\t\t\t\tfavCitiesData.push({ location, degreesC, weatherText });\r\n\t\t\t\t\tthis.setState({ favCitiesData });\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err => this.setState({ fetchError: err.message }));\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tlet favCities = JSON.parse(localStorage.getItem('Favorite Cities'));\r\n\t\tif (favCities) {\r\n\t\t\tthis.fetchData(favCities);\r\n\t\t}\r\n\t}\r\n\r\n\thandleOnClick = (cityData) =>{\r\n\t\tthis.props.onLocationChange({\r\n\t\t\tkey: cityData.location.key,\r\n\t\t\tcity: cityData.location.city\r\n\t\t});\r\n\t\tthis.props.onRouteChange('home');\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet fetchError;\r\n\t\tif (this.state.fetchError) {\r\n\t\t\tfetchError = (\r\n\t\t\t\t<HandleError\r\n\t\t\t\t\tname={`Error: ${this.state.fetchError}!`}\r\n\t\t\t\t\tdescription={`Failed to fetch data from the server.`}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t\treturn (\r\n\t\t\t\t<div className='error-msg'>\r\n\t\t\t\t\t{fetchError}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif (!this.state.favCitiesData.length) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tlet cards = this.state.favCitiesData.map((cityData) => (\r\n\t\t\t<Card className='favorites-card' key={cityData.location.key}>\r\n\t\t\t\t<Card.Body>\r\n\t\t\t\t\t<Card.Title\r\n\t\t\t\t\t\tclassName='favorites-card-title'\r\n\t\t\t\t\t\tonClick={() => this.handleOnClick(cityData)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{cityData.location.city}\r\n\t\t\t\t\t</Card.Title>\r\n\t\t\t\t\t<Card.Subtitle className=\"mb-2 favorites-card-subtitle\">\r\n\t\t\t\t\t\t<h3>{cityData.degreesC}&deg;C</h3>\r\n\t\t\t\t\t\t<h6>{cityData.weatherText}</h6>\r\n\t\t\t\t\t</Card.Subtitle>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t</Card>\r\n\t\t));\r\n\r\n\t\treturn (\r\n\t\t\t<div className='favorites-cards'>\r\n\t\t\t\t{ cards }\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Favorites;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Navigation from '../components/Navigation/Navigation';\nimport SearchField from '../components/SearchField/SearchField';\nimport WeatherDetails from '../components/WeatherDetails/WeatherDetails';\nimport Favorites from '../components/Favorites/Favorites';\nimport HandleError from '../components/HandleError';\nimport { setRoute, setLocation, requestCurrentPosition } from '../actions';\n\nimport './App.css';\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\troute: state.changeRoute.route,\n\t\tisPending: state.changeLocation.isPending,\n\t\tlocation: state.changeLocation.location,\n\t\terror: state.changeLocation.error\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonRouteChange: (route) => dispatch(setRoute(route)),\n\t\tonLocationChange: (location) => dispatch(setLocation(location)),\n\t\tonRequestCurrentPosition: () => dispatch(requestCurrentPosition())\n\t}\n}\n\nclass App extends Component {\n\tcomponentDidMount() {\n\t\tthis.props.onRequestCurrentPosition();\n\t}\n\n\trender() {\n\t\tconst { route, onRouteChange, location, onLocationChange, error } = this.props;\n\n\t\tlet fetchError;\n\t\tif (error) {\n\t\t\tfetchError = (\n\t\t\t\t<HandleError\n\t\t\t\t\tname={`Error: ${error}!`}\n\t\t\t\t\tdescription={`Failed to fetch data from the server.`}\n\t\t\t\t/>\n\t\t\t);\n\t\t\treturn (\n\t\t\t\t<div className='error-msg'>\n\t\t\t\t\t{fetchError}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Navigation\n\t\t\t\t\tonRouteChange={onRouteChange}\n\t\t\t\t\troute={route}\n\t\t\t\t/>\n\t\t\t\t{\n\t\t\t\t\troute === 'home' ?\n\t\t\t\t\t\t<div className=\"App\">\n\t\t\t\t\t\t\t<h1>Weather Forecast</h1>\n\t\t\t\t\t\t\t<SearchField onLocationChange={onLocationChange} />\n\t\t\t\t\t\t\t<WeatherDetails location={location} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t: <div className=\"App\">\n\t\t\t\t\t\t\t<h1>My Favorites</h1>\n\t\t\t\t\t\t\t<Favorites\n\t\t\t\t\t\t\t\tonLocationChange={onLocationChange}\n\t\t\t\t\t\t\t\tonRouteChange={onRouteChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n\tSET_ROUTE,\r\n\tSET_LOCATION,\r\n\tREQUEST_CURRENT_POSITION_PENDING,\r\n\tREQUEST_CURRENT_POSITION_SUCCESS,\r\n\tREQUEST_CURRENT_POSITION_FAILED\r\n} from './actionTypes'\r\n\r\nimport {\r\n\tUPDATE_INPUT,\r\n\tREQUEST_SEARCH_OPTIONS_PENDING,\r\n\tREQUEST_SEARCH_OPTIONS_SUCCESS,\r\n\tREQUEST_SEARCH_OPTIONS_FAILED\r\n} from './actionTypes'\r\n\r\n/* App component */\r\n\r\nconst initialStateRoute = {\r\n\troute: 'home'\r\n};\r\n\r\nexport const changeRoute = (state = initialStateRoute, action) => {\r\n\tswitch(action.type) {\r\n\t\tcase SET_ROUTE:\r\n\t\t\treturn { ...state, ...{ route: action.payload } };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nconst defaultLocation = {\r\n\tkey: '215854',\r\n\tcity: 'Tel Aviv'\r\n};\r\n\r\nconst initialStateLocation = {\r\n\tisPending: false,\r\n\tlocation: defaultLocation,\r\n\terror: ''\r\n};\r\n\r\nexport const changeLocation = (state = initialStateLocation, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_LOCATION:\r\n\t\t\treturn { ...state, ...{ location: action.payload } };\r\n\t\tcase REQUEST_CURRENT_POSITION_PENDING:\r\n\t\t\treturn { ...state, ...{ isPending: true } };\r\n\t\tcase REQUEST_CURRENT_POSITION_SUCCESS:\r\n\t\t\treturn { ...state, ...{ location: action.payload, isPending: false } };\r\n\t\tcase REQUEST_CURRENT_POSITION_FAILED:\r\n\t\t\treturn { ...state, ...{ error: action.payload, isPending: false } };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\n/* SearchField component */\r\n\r\nconst initialStateInput = {\r\n\tquery: '',\r\n\tisLoading: false,\r\n\toptions: [],\r\n\terror: ''\r\n};\r\n\r\nexport const changeInput = (state = initialStateInput, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase UPDATE_INPUT:\r\n\t\t\treturn { ...state, ...{ query: action.payload } };\r\n\t\tcase REQUEST_SEARCH_OPTIONS_PENDING:\r\n\t\t\treturn { ...state, ...{ isLoading: true } };\r\n\t\tcase REQUEST_SEARCH_OPTIONS_SUCCESS:\r\n\t\t\treturn { ...state, ...{ options: action.payload, isLoading: false } };\r\n\t\tcase REQUEST_SEARCH_OPTIONS_FAILED:\r\n\t\t\treturn { ...state, ...{ error: action.payload, isLoading: false } };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunkMiddleware from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport { changeRoute, changeLocation, changeInput } from './reducers';\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({\n\tchangeRoute,\n\tchangeLocation,\n\tchangeInput\n});\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/HeartFull.efb08012.svg\";"],"sourceRoot":""}