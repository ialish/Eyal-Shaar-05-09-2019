{"version":3,"sources":["components/FavoritesButton/HeartHollow.svg","components/Navigation/Navigation.js","components/HandleError.js","components/SearchField/SearchField.js","components/FavoritesButton/FavoritesButton.js","components/CurrentWeather/CurrentWeather.js","components/FiveDayForecast/FiveDayForecast.js","components/WeatherDetails/WeatherDetails.js","components/Favorites/Favorites.js","actionTypes.js","containers/App.js","actions.js","serviceWorker.js","reducers.js","index.js","components/FavoritesButton/HeartFull.svg"],"names":["module","exports","Navigation","routeChange","route","Nav","className","defaultActiveKey","Item","Link","eventKey","onClick","HandleError","name","description","useState","show","setShow","Toast","onClose","Header","Body","AsyncTypeahead","asyncContainer","Typeahead","apiKey","process","SearchField","props","onInputChange","query","setState","onSearch","isLoading","url","fetch","then","resp","json","options","catch","err","fetchError","message","onChange","selectedOptions","loadLocation","key","Key","city","LocalizedName","clearRequest","setTimeout","refs","SubjectTypeahead","getInstance","clear","state","mistype","this","match","id","ref","placeholder","labelKey","React","Component","FavoritesButton","handleHeartImage","favCities","find","element","location","heartImage","HeartHollow","HeartFull","addRemoveCity","array","push","index","findIndex","splice","JSON","parse","localStorage","getItem","setItem","stringify","src","alt","width","Button","variant","size","CurrentWeather","fetchForecast","degreesC","Temperature","Metric","Value","weatherText","WeatherText","prevProps","Math","round","FiveDayForecast","DailyForecasts","days","map","day","Card","Title","Date","EpochDate","getDay","Subtitle","Minimum","Maximum","WeatherDetails","Alert","Favorites","fetchData","favCitiesData","forEach","handleOnClick","cityData","length","cards","REQUEST_CURRENT_POSITION","PENDING","SUCCESS","FAILED","App","onRouteChange","onRequestCurrentPosition","connect","isPending","error","dispatch","type","payload","setLocation","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","response","data","Boolean","window","hostname","initialStateLocation","logger","createLogger","store","createStore","action","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.83084b82.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/HeartHollow.4ed65843.svg\";","import React from 'react';\r\nimport './Navigation.css';\r\nimport { Nav } from 'react-bootstrap';\r\n\r\nconst Navigation = ({ routeChange, route }) => {\r\n\treturn (\r\n\t\t<Nav className=\"justify-content-end nav-bar\" defaultActiveKey={route}>\r\n\t\t\t<Nav.Item>\r\n\t\t\t\t<Nav.Link eventKey=\"home\" onClick={() => routeChange('home')}>\r\n\t\t\t\t\tHome\r\n\t\t\t\t</Nav.Link>\r\n\t\t\t</Nav.Item>\r\n\t\t\t<Nav.Item>\r\n\t\t\t\t<Nav.Link eventKey=\"favorites\" onClick={() => routeChange('favorites')}>\r\n\t\t\t\t\tFavorites\r\n\t\t\t\t</Nav.Link>\r\n\t\t\t</Nav.Item>\r\n\t\t</Nav>\r\n\t);\r\n}\r\n\r\nexport default Navigation;","import React, { useState } from 'react';\r\nimport { Toast } from 'react-bootstrap';\r\n\r\nconst HandleError = ({ name, description }) => {\r\n\tconst [show, setShow] = useState(true);\r\n\tconst toggleShow = () => setShow(!show);\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Toast show={show} onClose={toggleShow}>\r\n\t\t\t\t<Toast.Header>\r\n\t\t\t\t\t<strong className=\"mr-auto\">{name}</strong>\r\n\t\t\t\t</Toast.Header>\r\n\t\t\t\t<Toast.Body>{description}</Toast.Body>\r\n\t\t\t</Toast>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default HandleError;","import React from 'react';\r\nimport './SearchField.css';\r\nimport { asyncContainer, Typeahead } from 'react-bootstrap-typeahead';\r\nimport HandleError from '../HandleError';\r\n\r\nconst AsyncTypeahead = asyncContainer(Typeahead);\r\nconst apiKey = process.env.REACT_APP_API_KEY;\r\n\r\nclass SearchField extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisLoading: false,\r\n\t\t\toptions: [],\r\n\t\t\tquery: '',\r\n\t\t\tfetchError: ''\r\n\t\t}\r\n\t}\r\n\r\n\tonInputChange = (query) => {\r\n\t\tthis.setState({ query });\r\n\t}\r\n\r\n\tonSearch = (query) => {\r\n\t\tthis.setState({ isLoading: true });\r\n\r\n\t\tconst url = `https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${apiKey}&q=${query}`;\r\n\r\n\t\tfetch(url)\r\n\t\t\t.then(resp => resp.json())\r\n\t\t\t.then(json => this.setState({\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\toptions: json\r\n\t\t\t}))\r\n\t\t\t.catch(err => this.setState({ fetchError: err.message }));\r\n\t}\r\n\t\r\n\tonChange = (selectedOptions) => {\r\n\t\tthis.props.loadLocation({\r\n\t\t\tkey: selectedOptions[0].Key,\r\n\t\t\tcity: selectedOptions[0].LocalizedName\r\n\t\t});\r\n\r\n\t\tthis.clearRequest();\r\n\t}\r\n\t\r\n\tclearRequest = () => {\r\n\t\tsetTimeout(() => this.refs.SubjectTypeahead.getInstance().clear(), 0);\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet fetchError;\r\n\t\tif (this.state.fetchError) {\r\n\t\t\tfetchError = (\r\n\t\t\t\t<HandleError\r\n\t\t\t\tname={`Error: ${this.state.fetchError}!`}\r\n\t\t\t\tdescription={'Failed to fetch data from the server.'}\r\n\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\t\r\n\t\tlet mistype;\r\n\t\tconst availableChars = /^[0-9a-zA-Z]*$/;\r\n\t\tif (!this.state.query.match(availableChars)) {\r\n\t\t\tmistype = (\r\n\t\t\t\t<HandleError\r\n\t\t\t\t\tname={'Error: Mistype!'}\r\n\t\t\t\t\tdescription={'Only english letters are allowed.'}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div className='search-field'>\r\n\t\t\t\t<AsyncTypeahead\r\n\t\t\t\t\tid=\"AsyncTypeahead\"\r\n\t\t\t\t\tref=\"SubjectTypeahead\"\r\n\t\t\t\t\tplaceholder=\"Enter location\"\r\n\t\t\t\t\tisLoading={this.state.isLoading}\r\n\t\t\t\t\tlabelKey=\"LocalizedName\"\r\n\t\t\t\t\tonInputChange={this.onInputChange}\r\n\t\t\t\t\tonSearch={this.onSearch}\r\n\t\t\t\t\toptions={this.state.options}\r\n\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className='error-msg'>\r\n\t\t\t\t\t{ fetchError }\r\n\t\t\t\t\t{ mistype }\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SearchField;","import React, { Component } from 'react';\r\nimport './FavoritesButton.css';\r\nimport HeartHollow from './HeartHollow.svg';\r\nimport HeartFull from './HeartFull.svg';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass FavoritesButton extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tfavCities: [],\r\n\t\t\theartImage: HeartHollow\r\n\t\t};\r\n\t}\r\n\r\n\thandleHeartImage = () => {\r\n\t\tif (this.state.favCities) {\r\n\t\t\tif (this.state.favCities.find(element =>\r\n\t\t\t\telement.key === this.props.location.key)) {\r\n\t\t\t\tif (this.state.heartImage === HeartHollow)\r\n\t\t\t\t\tthis.setState({ heartImage: HeartFull });\r\n\t\t\t} else {\r\n\t\t\t\tif (this.state.heartImage === HeartFull)\r\n\t\t\t\t\tthis.setState({ heartImage: HeartHollow });\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.setState({ favCities: JSON.parse(localStorage.getItem('Favorite Cities')) });\r\n\t\tthis.handleHeartImage();\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n\t\tthis.handleHeartImage();\r\n\t\tlocalStorage.setItem('Favorite Cities', JSON.stringify(this.state.favCities));\r\n\t}\r\n\r\n\taddRemoveCity = () => {\r\n\t\tlet array;\r\n\r\n\t\tif (this.state.favCities) {\r\n\t\t\tarray = [...this.state.favCities];\r\n\t\t} else {\r\n\t\t\tarray = [];\r\n\t\t}\r\n\t\t\r\n\t\tif (this.state.heartImage === HeartHollow) {\r\n\t\t\tarray.push(this.props.location);\r\n\t\t\tthis.setState({\r\n\t\t\t\theartImage: HeartFull,\r\n\t\t\t\tfavCities: array\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tconst index = array.findIndex(element =>\r\n\t\t\t\telement.key === this.props.location.key);\r\n\t\t\t\t\r\n\t\t\tarray.splice(index, 1);\r\n\t\t\tthis.setState({\r\n\t\t\t\theartImage: HeartHollow,\r\n\t\t\t\tfavCities: array\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='favorites-button'>\r\n\t\t\t\t<img src={this.state.heartImage} alt='Heart' width='35px'></img>\r\n\t\t\t\t<Button variant=\"outline-danger\" size=\"sm\" onClick={this.addRemoveCity}>Add to Favorites</Button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default FavoritesButton;","import React from 'react';\r\nimport './CurrentWeather.css';\r\nimport HandleError from '../HandleError';\r\n\r\nconst apiKey = process.env.REACT_APP_API_KEY;\r\n\r\nclass CurrentWeather extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcity: '',\r\n\t\t\tdegreesC: null,\r\n\t\t\tweatherText: '',\r\n\t\t\tfetchError: ''\r\n\t\t}\r\n\t}\r\n\r\n\tfetchForecast = () => {\r\n\t\tconst url = `https://dataservice.accuweather.com/currentconditions/v1/${this.props.location.key}?apikey=${apiKey}`;\r\n\r\n\t\tfetch(url)\r\n\t\t\t.then(resp => resp.json())\r\n\t\t\t.then(json => this.setState({\r\n\t\t\t\tcity: this.props.location.city,\r\n\t\t\t\tdegreesC: json[0].Temperature.Metric.Value,\r\n\t\t\t\tweatherText: json[0].WeatherText\r\n\t\t\t}))\r\n\t\t\t.catch(err => this.setState({ fetchError: err.message }));\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.fetchForecast();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tconst prevLocation = prevProps.location || {};\r\n\t\tif (prevLocation.key !== this.props.location.key) {\r\n\t\t\tthis.fetchForecast();\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet fetchError;\r\n\t\tif (this.state.fetchError) {\r\n\t\t\tfetchError = (\r\n\t\t\t\t<HandleError\r\n\t\t\t\t\tname={`Error: ${this.state.fetchError}!`}\r\n\t\t\t\t\tdescription={'Failed to fetch data from the server.'}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h5 className='city'>{this.state.city}</h5>\r\n\t\t\t\t<h6>{Math.round(this.state.degreesC)}&deg;C</h6>\r\n\t\t\t\t<h2 className='weather-text'>{this.state.weatherText}</h2>\r\n\t\t\t\t<div className='error-msg'>\r\n\t\t\t\t\t{fetchError}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default CurrentWeather;","import React from 'react';\r\nimport './FiveDayForecast.css';\r\nimport { Card } from 'react-bootstrap';\r\nimport HandleError from '../HandleError';\r\n\r\nconst apiKey = process.env.REACT_APP_API_KEY;\r\n\r\nclass FiveDayForecast extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tDailyForecasts: [],\r\n\t\t\tfetchError: ''\r\n\t\t}\r\n\t}\r\n\r\n\tfetchForecast = () => {\r\n\t\tconst url = `https://dataservice.accuweather.com/forecasts/v1/daily/5day/${this.props.location.key}?apikey=${apiKey}&metric=true`;\r\n\r\n\t\tfetch(url)\r\n\t\t\t.then(resp => resp.json())\r\n\t\t\t.then(json => this.setState({\r\n\t\t\t\tDailyForecasts: json.DailyForecasts\r\n\t\t\t}))\r\n\t\t\t.catch(err => this.setState({ fetchError: err.message }));\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.fetchForecast();\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tconst prevLocation = prevProps.location || {};\r\n\t\tif (prevLocation.key !== this.props.location.key) {\r\n\t\t\tthis.fetchForecast();\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n\t\tlet fetchError;\r\n\r\n\t\tif (this.state.fetchError) {\r\n\t\t\tfetchError = (\r\n\t\t\t\t<HandleError\r\n\t\t\t\t\tname={`Error: ${this.state.fetchError}!`}\r\n\t\t\t\t\tdescription={'Failed to fetch data from the server.'}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div className='five-day-cards'>\r\n\t\t\t\t{this.state.DailyForecasts.map((day, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Card className='five-day-card' key={index}>\r\n\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t<Card.Title className='five-day-card-title'>\r\n\t\t\t\t\t\t\t\t\t{days[new Date(day.EpochDate * 1000).getDay()]}\r\n\t\t\t\t\t\t\t\t</Card.Title>\r\n\t\t\t\t\t\t\t\t<Card.Subtitle className=\"mb-2 five-day-card-subtitle\">\r\n\t\t\t\t\t\t\t\t\t{Math.round((day.Temperature.Minimum.Value + day.Temperature.Maximum.Value) / 2)}&deg;C\r\n\t\t\t\t\t\t\t\t</Card.Subtitle>\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t\t<div className='error-msg'>\r\n\t\t\t\t\t{fetchError}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default FiveDayForecast;","import React from 'react';\r\nimport './WeatherDetails.css';\r\nimport { Alert } from 'react-bootstrap';\r\nimport FavoritesButton from '../FavoritesButton/FavoritesButton';\r\nimport CurrentWeather from '../CurrentWeather/CurrentWeather';\r\nimport FiveDayForecast from '../FiveDayForecast/FiveDayForecast';\r\n\r\nconst WeatherDetails = ({ location }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Alert className='background-box' variant={'success'}>\r\n\t\t\t\t<FavoritesButton location={location} />\r\n\t\t\t\t<CurrentWeather location={location} />\r\n\t\t\t\t<FiveDayForecast location={location} />\r\n\t\t\t</Alert>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default WeatherDetails;","import React, { Component } from 'react';\r\nimport './Favorites.css';\r\nimport { Card } from 'react-bootstrap';\r\nimport HandleError from '../HandleError';\r\n\r\nconst apiKey = process.env.REACT_APP_API_KEY;\r\n\r\nclass Favorites extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfavCitiesData: [],\r\n\t\t\tfetchError: ''\r\n\t\t};\r\n\t}\r\n\t\r\n\tfetchData = (favCities) => {\r\n\t\tlet favCitiesData = [];\r\n\t\tfavCities.forEach((location) => {\r\n\t\t\tconst url = `https://dataservice.accuweather.com/currentconditions/v1/${location.key}?apikey=${apiKey}`;\r\n\t\t\tfetch(url)\r\n\t\t\t\t.then(resp => resp.json())\r\n\t\t\t\t.then(json => {\r\n\t\t\t\t\tlet degreesC = Math.round(json[0].Temperature.Metric.Value);\r\n\t\t\t\t\tlet weatherText = json[0].WeatherText;\r\n\t\t\t\t\tfavCitiesData.push({ location, degreesC, weatherText });\r\n\t\t\t\t\tthis.setState({ favCitiesData });\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err => this.setState({ fetchError: err.message }));\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tlet favCities = JSON.parse(localStorage.getItem('Favorite Cities'));\r\n\t\tif (favCities) {\r\n\t\t\tthis.fetchData(favCities);\r\n\t\t}\r\n\t}\r\n\r\n\thandleOnClick = (cityData) =>{\r\n\t\tthis.props.loadLocation({\r\n\t\t\tkey: cityData.location.key,\r\n\t\t\tcity: cityData.location.city\r\n\t\t});\r\n\t\tthis.props.routeChange('home');\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet fetchError;\r\n\t\tif (this.state.fetchError) {\r\n\t\t\tfetchError = (\r\n\t\t\t\t<HandleError\r\n\t\t\t\t\tname={`Error: ${this.state.fetchError}!`}\r\n\t\t\t\t\tdescription={`Failed to fetch data from the server.`}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t\treturn (\r\n\t\t\t\t<div className='error-msg'>\r\n\t\t\t\t\t{fetchError}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif (!this.state.favCitiesData.length) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tlet cards = this.state.favCitiesData.map((cityData) => (\r\n\t\t\t<Card className='favorites-card' key={cityData.location.key}>\r\n\t\t\t\t<Card.Body>\r\n\t\t\t\t\t<Card.Title\r\n\t\t\t\t\t\tclassName='favorites-card-title'\r\n\t\t\t\t\t\tonClick={() => this.handleOnClick(cityData)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{cityData.location.city}\r\n\t\t\t\t\t</Card.Title>\r\n\t\t\t\t\t<Card.Subtitle className=\"mb-2 favorites-card-subtitle\">\r\n\t\t\t\t\t\t<h3>{cityData.degreesC}&deg;C</h3>\r\n\t\t\t\t\t\t<h6>{cityData.weatherText}</h6>\r\n\t\t\t\t\t</Card.Subtitle>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t</Card>\r\n\t\t));\r\n\r\n\t\treturn (\r\n\t\t\t<div className='favorites-cards'>\r\n\t\t\t\t{ cards }\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Favorites;","export const SET_LOCATION = 'SET_LOCATION';\r\nconst FETCH_PROCESS = {\r\n\tPENDING: 'PENDING',\r\n\tSUCCESS: 'SUCCESS',\r\n\tFAILED: 'FAILED'\r\n};\r\nexport const REQUEST_CURRENT_POSITION = FETCH_PROCESS;","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\n\nimport Navigation from '../components/Navigation/Navigation';\nimport SearchField from '../components/SearchField/SearchField';\nimport WeatherDetails from '../components/WeatherDetails/WeatherDetails';\nimport Favorites from '../components/Favorites/Favorites';\nimport HandleError from '../components/HandleError';\nimport { setLocation, requestCurrentPosition } from '../actions';\n\nimport './App.css';\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tisPending: state.isPending,\n\t\tlocation: state.location,\n\t\terror: state.error\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tloadLocation: (location) => dispatch(setLocation(location)),\n\t\tonRequestCurrentPosition: () => dispatch(requestCurrentPosition())\n\t}\n}\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\troute: 'home'\n\t\t};\n\t}\n\t\n\tcomponentDidMount() {\n\t\tthis.props.onRequestCurrentPosition();\n\t\t}\n\n\tonRouteChange = (route) => {\n\t\tthis.setState({ route });\n\t}\n\n\trender() {\n\t\tconst { location, loadLocation } = this.props;\n\n\t\tlet fetchError;\n\t\tif (this.state.fetchError) {\n\t\t\tfetchError = (\n\t\t\t\t<HandleError\n\t\t\t\t\tname={`Error: ${this.state.fetchError}!`}\n\t\t\t\t\tdescription={`Failed to fetch data from the server.`}\n\t\t\t\t/>\n\t\t\t);\n\t\t\treturn (\n\t\t\t\t<div className='error-msg'>\n\t\t\t\t\t{fetchError}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Navigation\n\t\t\t\t\trouteChange={this.onRouteChange}\n\t\t\t\t\troute={this.state.route}\n\t\t\t\t/>\n\t\t\t\t{\n\t\t\t\t\tthis.state.route === 'home' ?\n\t\t\t\t\t\t<div className=\"App\">\n\t\t\t\t\t\t\t<h1>Weather Forecast</h1>\n\t\t\t\t\t\t\t<SearchField loadLocation={loadLocation} />\n\t\t\t\t\t\t\t<WeatherDetails location={location} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t: <div className=\"App\">\n\t\t\t\t\t\t\t<h1>My Favorites</h1>\n\t\t\t\t\t\t\t<Favorites\n\t\t\t\t\t\t\t\tloadLocation={loadLocation}\n\t\t\t\t\t\t\t\trouteChange={this.onRouteChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import { SET_LOCATION, REQUEST_CURRENT_POSITION } from './actionTypes'\r\n\r\nexport const setLocation = (location) => {\r\n\treturn {\r\n\t\ttype: SET_LOCATION,\r\n\t\tpayload: location\r\n\t}\r\n}\r\n\r\nexport const requestCurrentPosition = () => {\r\n\treturn (dispatch) => {\r\n\t\tdispatch({ type: REQUEST_CURRENT_POSITION.PENDING });\r\n\t\tif (navigator.geolocation) {\r\n\t\t\tnavigator.geolocation.getCurrentPosition((position) => {\r\n\t\t\t\tconst apiKey = process.env.REACT_APP_API_KEY;\r\n\t\t\t\tconst latitude = position.coords.latitude;\r\n\t\t\t\tconst longitude = position.coords.longitude;\r\n\t\t\t\tconst url = `https://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=${apiKey}&q=${latitude}%2C${longitude}`;\r\n\t\t\t\treturn fetch(url)\r\n\t\t\t\t\t.then((response) => response.json())\r\n\t\t\t\t\t.then((data) => dispatch({\r\n\t\t\t\t\t\ttype: REQUEST_CURRENT_POSITION.SUCCESS,\r\n\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\tkey: data.Key,\r\n\t\t\t\t\t\t\tcity: data.LocalizedName\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}))\r\n\t\t\t\t\t.catch((error) => dispatch({\r\n\t\t\t\t\t\ttype: REQUEST_CURRENT_POSITION.FAILED,\r\n\t\t\t\t\t\tpayload: error.message\r\n\t\t\t\t\t}));\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { SET_LOCATION, REQUEST_CURRENT_POSITION } from './actionTypes'\r\n\r\nconst defaultLocation = {\r\n\tkey: '215854',\r\n\tcity: 'Tel Aviv'\r\n};\r\n\r\nconst initialStateLocation = {\r\n\tisPending: false,\r\n\tlocation: defaultLocation,\r\n\terror: ''\r\n};\r\n\r\nexport const changeLocation = (state = initialStateLocation, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_LOCATION:\r\n\t\t\treturn { ...state, ...{ location: action.payload } };\r\n\t\tcase REQUEST_CURRENT_POSITION.PENDING:\r\n\t\t\treturn { ...state, ...{ isPending: true } };\r\n\t\tcase REQUEST_CURRENT_POSITION.SUCCESS:\r\n\t\t\treturn { ...state, ...{ location: action.payload, isPending: false } };\r\n\t\tcase REQUEST_CURRENT_POSITION.FAILED:\r\n\t\t\treturn { ...state, ...{ error: action.payload, isPending: false } };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunkMiddleware from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport { changeLocation } from './reducers';\n\nconst logger = createLogger();\nconst store = createStore(changeLocation, applyMiddleware(thunkMiddleware, logger));\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/HeartFull.efb08012.svg\";"],"sourceRoot":""}