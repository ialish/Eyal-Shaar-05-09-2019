{"version":3,"sources":["components/FavoritesButton/HeartHollow.svg","components/Navigation/Navigation.js","components/HandleError.js","actions.js","components/SearchField/SearchField.js","actionTypes.js","components/FavoritesButton/FavoritesButton.js","components/CurrentWeather/CurrentWeather.js","components/FiveDayForecast/FiveDayForecast.js","components/WeatherDetails/WeatherDetails.js","components/Favorites/Favorites.js","containers/App.js","serviceWorker.js","reducers.js","index.js","components/FavoritesButton/HeartFull.svg"],"names":["module","exports","Navigation","onRouteChange","route","Nav","className","defaultActiveKey","Item","Link","eventKey","onClick","HandleError","name","description","useState","show","setShow","Toast","onClose","Header","Body","apiKey","process","AsyncTypeahead","asyncContainer","Typeahead","SearchField","onChange","selectedOptions","props","onLocationChange","key","Key","city","LocalizedName","clearRequest","setTimeout","refs","SubjectTypeahead","getInstance","clear","fetchError","mistype","this","query","onInputChange","onSearch","isLoading","options","error","match","id","ref","placeholder","labelKey","React","Component","connect","state","changeInput","dispatch","type","payload","updateInput","url","fetch","then","response","json","message","data","requestSearchOptions","FavoritesButton","handleHeartImage","favCities","find","element","location","heartImage","HeartHollow","setState","HeartFull","addRemoveCity","array","push","index","findIndex","splice","JSON","parse","localStorage","getItem","setItem","stringify","src","alt","width","Button","variant","size","CurrentWeather","onRequestCurrentWeather","prevProps","currentWeatherData","Math","round","degreesC","weatherText","isPending","changeCurrentWeather","ownProps","Temperature","Metric","Value","WeatherText","FiveDayForecast","onRequestFiveDayForecast","DailyForecasts","days","map","day","Card","Title","Date","EpochDate","getDay","Subtitle","Minimum","Maximum","changeFiveDayForecast","WeatherDetails","Alert","Favorites","handleOnClick","cityData","onRequestFavoritesCurrentConditions","favCitiesData","length","cards","updateFavorites","forEach","requestFavoritesCurrentConditions","App","onRequestCurrentPosition","changeRoute","changeLocation","setRoute","setLocation","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","Boolean","window","hostname","initialStateRoute","initialStateLocation","initialStateInput","initialStateCurrentWeather","initialStateFiveDayForecast","initialStateFavorites","logger","createLogger","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.afbaecbb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/HeartHollow.4ed65843.svg\";","import React from 'react';\nimport './Navigation.css';\nimport { Nav } from 'react-bootstrap';\n\nconst Navigation = ({ onRouteChange, route }) => {\n\treturn (\n\t\t<Nav className=\"justify-content-end nav-bar\" defaultActiveKey={route}>\n\t\t\t<Nav.Item>\n\t\t\t\t<Nav.Link eventKey=\"home\" onClick={() => onRouteChange('home')}>\n\t\t\t\t\tHome\n\t\t\t\t</Nav.Link>\n\t\t\t</Nav.Item>\n\t\t\t<Nav.Item>\n\t\t\t\t<Nav.Link eventKey=\"favorites\" onClick={() => onRouteChange('favorites')}>\n\t\t\t\t\tFavorites\n\t\t\t\t</Nav.Link>\n\t\t\t</Nav.Item>\n\t\t</Nav>\n\t);\n}\n\nexport default Navigation;","import React, { useState } from 'react';\nimport { Toast } from 'react-bootstrap';\n\nconst HandleError = ({ name, description }) => {\n\tconst [show, setShow] = useState(true);\n\tconst toggleShow = () => setShow(!show);\n\treturn (\n\t\t<div>\n\t\t\t<Toast show={show} onClose={toggleShow}>\n\t\t\t\t<Toast.Header>\n\t\t\t\t\t<strong className=\"mr-auto\">{name}</strong>\n\t\t\t\t</Toast.Header>\n\t\t\t\t<Toast.Body>{description}</Toast.Body>\n\t\t\t</Toast>\n\t\t</div>\n\t);\n}\n\nexport default HandleError;","/* App component */\nimport {\n\tSET_ROUTE,\n\tSET_LOCATION,\n\tREQUEST_CURRENT_POSITION_PENDING,\n\tREQUEST_CURRENT_POSITION_SUCCESS,\n\tREQUEST_CURRENT_POSITION_FAILED\n} from './actionTypes';\n\n/* SearchField component */\nimport {\n\tUPDATE_INPUT,\n\tREQUEST_SEARCH_OPTIONS_PENDING,\n\tREQUEST_SEARCH_OPTIONS_SUCCESS,\n\tREQUEST_SEARCH_OPTIONS_FAILED\n} from './actionTypes';\n\n/* CurrentWeather component */\nimport {\n\tREQUEST_CURRENT_WEATHER_PENDING,\n\tREQUEST_CURRENT_WEATHER_SUCCESS,\n\tREQUEST_CURRENT_WEATHER_FAILED\n} from './actionTypes';\n\n/* FiveDayForecast component */\nimport {\n\tREQUEST_FIVE_DAY_FORECAST_PENDING,\n\tREQUEST_FIVE_DAY_FORECAST_SUCCESS,\n\tREQUEST_FIVE_DAY_FORECAST_FAILED\n} from './actionTypes';\n\n/* Favorites component */\nimport {\n\tREQUEST_FAVORITES_CURRENT_CONDITIONS_PENDING,\n\tREQUEST_FAVORITES_CURRENT_CONDITIONS_SUCCESS,\n\tREQUEST_FAVORITES_CURRENT_CONDITIONS_FAILED\n} from './actionTypes';\n\nconst apiKey = process.env.REACT_APP_API_KEY;\n\n/* App component */\n\nexport const setRoute = (route) => {\n\treturn {\n\t\ttype: SET_ROUTE,\n\t\tpayload: route\n\t}\n}\n\nexport const setLocation = (location) => {\n\treturn {\n\t\ttype: SET_LOCATION,\n\t\tpayload: location\n\t}\n}\n\nexport const requestCurrentPosition = () => {\n\treturn (dispatch) => {\n\t\tdispatch({ type: REQUEST_CURRENT_POSITION_PENDING });\n\t\tif (navigator.geolocation) {\n\t\t\tnavigator.geolocation.getCurrentPosition((position) => {\n\t\t\t\tconst latitude = position.coords.latitude;\n\t\t\t\tconst longitude = position.coords.longitude;\n\t\t\t\tconst url = `https://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=${apiKey}&q=${latitude}%2C${longitude}`;\n\t\t\t\treturn fetch(url)\n\t\t\t\t\t.then(\n\t\t\t\t\t\t(response) => response.json(),\n\t\t\t\t\t\t// It's not good to use catch because that will also catch any \n\t\t\t\t\t\t// errors in the dispatch and resulting render, causing a loop \n\t\t\t\t\t\t// of 'Unexpected batch number' errors.\n\t\t\t\t\t\t(error) => dispatch({\n\t\t\t\t\t\t\ttype: REQUEST_CURRENT_POSITION_FAILED,\n\t\t\t\t\t\t\tpayload: error.message\n\t\t\t\t\t\t}))\n\t\t\t\t\t.then((data) => dispatch({\n\t\t\t\t\t\ttype: REQUEST_CURRENT_POSITION_SUCCESS,\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tkey: data.Key,\n\t\t\t\t\t\t\tcity: data.LocalizedName\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t});\n\t\t}\n\t}\n}\n\n/* SearchField component */\n\nexport const updateInput = (query) => {\n\treturn {\n\t\ttype: UPDATE_INPUT,\n\t\tpayload: query\n\t}\n}\n\nexport const requestSearchOptions = (query) => {\n\treturn (dispatch) => {\n\t\tdispatch({ type: REQUEST_SEARCH_OPTIONS_PENDING });\n\t\tconst url = `https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${apiKey}&q=${query}`;\n\t\treturn fetch(url)\n\t\t\t.then(\n\t\t\t\t(response) => response.json(),\n\t\t\t\t(error) => dispatch({\n\t\t\t\t\ttype: REQUEST_SEARCH_OPTIONS_FAILED,\n\t\t\t\t\tpayload: error.message\n\t\t\t\t}))\n\t\t\t.then((data) => dispatch({\n\t\t\t\ttype: REQUEST_SEARCH_OPTIONS_SUCCESS,\n\t\t\t\tpayload: data\n\t\t\t}));\n\t}\n}\n\n/* CurrentWeather component */\n\nexport const requestCurrentWeather = (location) => {\n\treturn (dispatch) => {\n\t\tdispatch({ type: REQUEST_CURRENT_WEATHER_PENDING });\n\t\tconst url = `https://dataservice.accuweather.com/currentconditions/v1/${location.key}?apikey=${apiKey}`;\n\t\treturn fetch(url)\n\t\t\t.then(\n\t\t\t\t(response) => response.json(),\n\t\t\t\t(error) => dispatch({\n\t\t\t\t\ttype: REQUEST_CURRENT_WEATHER_FAILED,\n\t\t\t\t\tpayload: error.message\n\t\t\t\t}))\n\t\t\t.then((data) => dispatch({\n\t\t\t\ttype: REQUEST_CURRENT_WEATHER_SUCCESS,\n\t\t\t\tpayload: {\n\t\t\t\t\tcity: location.city,\n\t\t\t\t\tdegreesC: data[0].Temperature.Metric.Value,\n\t\t\t\t\tweatherText: data[0].WeatherText\n\t\t\t\t}\n\t\t\t}));\n\t}\n}\n\n/* FiveDayForecast component */\n\nexport const requestFiveDayForecast = (location) => {\n\treturn (dispatch) => {\n\t\tdispatch({ type: REQUEST_FIVE_DAY_FORECAST_PENDING });\n\t\tconst url = `https://dataservice.accuweather.com/forecasts/v1/daily/5day/${location.key}?apikey=${apiKey}&metric=true`;\n\t\treturn fetch(url)\n\t\t\t.then(\n\t\t\t\t(response) => response.json(),\n\t\t\t\t(error) => dispatch({\n\t\t\t\t\ttype: REQUEST_FIVE_DAY_FORECAST_FAILED,\n\t\t\t\t\tpayload: error.message\n\t\t\t\t}))\n\t\t\t.then((data) => dispatch({\n\t\t\t\ttype: REQUEST_FIVE_DAY_FORECAST_SUCCESS,\n\t\t\t\tpayload: data.DailyForecasts\n\t\t\t}));\n\t}\n}\n\n/* Favorites component */\n\nexport const requestFavoritesCurrentConditions = (favCities) => {\n\treturn (dispatch) => {\n\t\tfavCities.forEach((location) => {\n\t\t\tdispatch({ type: REQUEST_FAVORITES_CURRENT_CONDITIONS_PENDING });\n\t\t\tconst url = `https://dataservice.accuweather.com/currentconditions/v1/${location.key}?apikey=${apiKey}`;\n\t\t\treturn fetch(url)\n\t\t\t\t.then(\n\t\t\t\t\t(response) => response.json(),\n\t\t\t\t\t(error) => dispatch({\n\t\t\t\t\t\ttype: REQUEST_FAVORITES_CURRENT_CONDITIONS_FAILED,\n\t\t\t\t\t\tpayload: error.message\n\t\t\t\t\t}))\n\t\t\t\t.then((data) => {\n\t\t\t\t\tdispatch({\n\t\t\t\t\t\ttype: REQUEST_FAVORITES_CURRENT_CONDITIONS_SUCCESS,\n\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\tlocation,\n\t\t\t\t\t\t\tdegreesC: Math.round(data[0].Temperature.Metric.Value),\n\t\t\t\t\t\t\tweatherText: data[0].WeatherText\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t});\n\t\t});\n\t}\n}","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { asyncContainer, Typeahead } from 'react-bootstrap-typeahead';\nimport HandleError from '../HandleError';\nimport { updateInput, requestSearchOptions } from '../../actions';\n\nimport './SearchField.css';\n\nconst AsyncTypeahead = asyncContainer(Typeahead);\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tquery: state.changeInput.query,\n\t\tisLoading: state.changeInput.isLoading,\n\t\toptions: state.changeInput.options,\n\t\terror: state.changeInput.error\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonInputChange: (query) => dispatch(updateInput(query)),\n\t\tonSearch: (query) => dispatch(requestSearchOptions(query))\n\t}\n}\n\nclass SearchField extends React.Component {\n\tonChange = (selectedOptions) => {\n\t\tthis.props.onLocationChange({\n\t\t\tkey: selectedOptions[0].Key,\n\t\t\tcity: selectedOptions[0].LocalizedName\n\t\t});\n\n\t\tthis.clearRequest();\n\t}\n\t\n\tclearRequest = () => {\n\t\tsetTimeout(() => this.refs.SubjectTypeahead.getInstance().clear(), 0);\n\t}\n\n\trender() {\n\t\tconst { query, onInputChange, onSearch, isLoading, options, error } = this.props;\n\n\t\tlet fetchError;\n\t\tif (error) {\n\t\t\tfetchError = (\n\t\t\t\t<HandleError\n\t\t\t\t\tname={`Error: ${error}!`}\n\t\t\t\t\tdescription={'Failed to fetch data from the server.'}\n\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}\n\t\t\t\n\t\tlet mistype;\n\t\tconst availableChars = /^[0-9a-zA-Z ]*$/;\n\t\tif (!query.match(availableChars)) {\n\t\t\tmistype = (\n\t\t\t\t<HandleError\n\t\t\t\t\tname={'Error: Mistype!'}\n\t\t\t\t\tdescription={'Only english letters are allowed.'}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\t\n\t\treturn (\n\t\t\t<div className='search-field'>\n\t\t\t\t<AsyncTypeahead\n\t\t\t\t\tid=\"AsyncTypeahead\"\n\t\t\t\t\tref=\"SubjectTypeahead\"\n\t\t\t\t\tplaceholder=\"Enter location\"\n\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\tlabelKey=\"LocalizedName\"\n\t\t\t\t\tonInputChange={onInputChange}\n\t\t\t\t\tonSearch={onSearch}\n\t\t\t\t\toptions={options}\n\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t/>\n\t\t\t\t<div className='error-msg'>\n\t\t\t\t\t{ fetchError }\n\t\t\t\t\t{ mistype }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchField);","/* App component */\nexport const SET_ROUTE = 'SET_ROUTE';\nexport const SET_LOCATION = 'SET_LOCATION';\nexport const REQUEST_CURRENT_POSITION_PENDING = 'REQUEST_CURRENT_POSITION_PENDING';\nexport const REQUEST_CURRENT_POSITION_SUCCESS = 'REQUEST_CURRENT_POSITION_SUCCESS';\nexport const REQUEST_CURRENT_POSITION_FAILED = 'REQUEST_CURRENT_POSITION_FAILED';\n\n/* SearchField component */\nexport const UPDATE_INPUT = 'UPDATE_INPUT;'\nexport const REQUEST_SEARCH_OPTIONS_PENDING = 'REQUEST_SEARCH_OPTIONS_PENDING';\nexport const REQUEST_SEARCH_OPTIONS_SUCCESS = 'REQUEST_SEARCH_OPTIONS_SUCCESS';\nexport const REQUEST_SEARCH_OPTIONS_FAILED = 'REQUEST_SEARCH_OPTIONS_FAILED';\n\n/* CurrentWeather component */\nexport const REQUEST_CURRENT_WEATHER_PENDING = 'REQUEST_CURRENT_WEATHER_PENDING';\nexport const REQUEST_CURRENT_WEATHER_SUCCESS = 'REQUEST_CURRENT_WEATHER_SUCCESS';\nexport const REQUEST_CURRENT_WEATHER_FAILED = 'REQUEST_CURRENT_WEATHER_FAILED';\n\n/* FiveDayForecast component */\nexport const REQUEST_FIVE_DAY_FORECAST_PENDING = 'REQUEST_FIVE_DAY_FORECAST_PENDING';\nexport const REQUEST_FIVE_DAY_FORECAST_SUCCESS = 'REQUEST_FIVE_DAY_FORECAST_SUCCESS';\nexport const REQUEST_FIVE_DAY_FORECAST_FAILED = 'REQUEST_FIVE_DAY_FORECAST_FAILED';\n\n/* Favorites component */\nexport const REQUEST_FAVORITES_CURRENT_CONDITIONS_PENDING = 'REQUEST_FAVORITES_CURRENT_CONDITIONS_PENDING';\nexport const REQUEST_FAVORITES_CURRENT_CONDITIONS_SUCCESS = 'REQUEST_FAVORITES_CURRENT_CONDITIONS_SUCCESS';\nexport const REQUEST_FAVORITES_CURRENT_CONDITIONS_FAILED = 'REQUEST_FAVORITES_CURRENT_CONDITIONS_FAILED';","import React, { Component } from 'react';\nimport './FavoritesButton.css';\nimport HeartHollow from './HeartHollow.svg';\nimport HeartFull from './HeartFull.svg';\nimport { Button } from 'react-bootstrap';\n\nclass FavoritesButton extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tfavCities: [],\n\t\t\theartImage: HeartHollow\n\t\t};\n\t}\n\n\thandleHeartImage = () => {\n\t\tif (this.state.favCities) {\n\t\t\tif (this.state.favCities.find(element =>\n\t\t\t\telement.key === this.props.location.key)) {\n\t\t\t\tif (this.state.heartImage === HeartHollow)\n\t\t\t\t\tthis.setState({ heartImage: HeartFull });\n\t\t\t} else {\n\t\t\t\tif (this.state.heartImage === HeartFull)\n\t\t\t\t\tthis.setState({ heartImage: HeartHollow });\n\t\t\t}\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.setState({ favCities: JSON.parse(localStorage.getItem('Favorite Cities')) });\n\t\tthis.handleHeartImage();\n\t}\n\n\tcomponentDidUpdate() {\n\t\tthis.handleHeartImage();\n\t\tlocalStorage.setItem('Favorite Cities', JSON.stringify(this.state.favCities));\n\t}\n\n\taddRemoveCity = () => {\n\t\tlet array;\n\n\t\tif (this.state.favCities) {\n\t\t\tarray = [...this.state.favCities];\n\t\t} else {\n\t\t\tarray = [];\n\t\t}\n\t\t\n\t\tif (this.state.heartImage === HeartHollow) {\n\t\t\tarray.push(this.props.location);\n\t\t\tthis.setState({\n\t\t\t\theartImage: HeartFull,\n\t\t\t\tfavCities: array\n\t\t\t})\n\t\t} else {\n\t\t\tconst index = array.findIndex(element =>\n\t\t\t\telement.key === this.props.location.key);\n\t\t\t\t\n\t\t\tarray.splice(index, 1);\n\t\t\tthis.setState({\n\t\t\t\theartImage: HeartHollow,\n\t\t\t\tfavCities: array\n\t\t\t})\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className='favorites-button'>\n\t\t\t\t<img src={this.state.heartImage} alt='Heart' width='35px'></img>\n\t\t\t\t<Button variant=\"outline-danger\" size=\"sm\" onClick={this.addRemoveCity}>Add to Favorites</Button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default FavoritesButton;","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport HandleError from '../HandleError';\nimport { requestCurrentWeather } from '../../actions';\n\nimport './CurrentWeather.css';\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tisPending: state.changeCurrentWeather.isPending,\n\t\tcurrentWeatherData: state.changeCurrentWeather.currentWeatherData,\n\t\terror: state.changeCurrentWeather.error\n\t}\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n\treturn {\n\t\tonRequestCurrentWeather: () => dispatch(requestCurrentWeather(ownProps.location))\n\t}\n}\n\nclass CurrentWeather extends React.Component {\n\tcomponentDidMount() {\n\t\tthis.props.onRequestCurrentWeather();\n\t}\n\t\n\tcomponentDidUpdate(prevProps) {\n\t\tconst prevLocation = prevProps.location || {};\n\t\tif (prevLocation.key !== this.props.location.key) {\n\t\t\tthis.props.onRequestCurrentWeather();\n\t\t}\n\t}\n\t\n\trender() {\n\t\tconst { currentWeatherData, error } = this.props;\n\n\t\tlet fetchError;\n\t\tif (error) {\n\t\t\tfetchError = (\n\t\t\t\t<HandleError\n\t\t\t\t\tname={`Error: ${error}!`}\n\t\t\t\t\tdescription={'Failed to fetch data from the server.'}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h5 className='city'>{currentWeatherData.city}</h5>\n\t\t\t\t<h6>{Math.round(currentWeatherData.degreesC)}&deg;C</h6>\n\t\t\t\t<h2 className='weather-text'>{currentWeatherData.weatherText}</h2>\n\t\t\t\t<div className='error-msg'>\n\t\t\t\t\t{fetchError}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrentWeather);","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { Card } from 'react-bootstrap';\nimport HandleError from '../HandleError';\nimport { requestFiveDayForecast } from '../../actions';\n\nimport './FiveDayForecast.css';\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tisPending: state.changeFiveDayForecast.isPending,\n\t\tDailyForecasts: state.changeFiveDayForecast.DailyForecasts,\n\t\terror: state.changeFiveDayForecast.error\n\t}\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n\treturn {\n\t\tonRequestFiveDayForecast: () => dispatch(requestFiveDayForecast(ownProps.location))\n\t}\n}\n\nclass FiveDayForecast extends React.Component {\n\tcomponentDidMount() {\n\t\tthis.props.onRequestFiveDayForecast();\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tconst prevLocation = prevProps.location || {};\n\t\tif (prevLocation.key !== this.props.location.key) {\n\t\t\tthis.props.onRequestFiveDayForecast();\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { DailyForecasts, error } = this.props;\n\t\tconst days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\t\t\n\t\tlet fetchError;\n\t\tif (error) {\n\t\t\tfetchError = (\n\t\t\t\t<HandleError\n\t\t\t\t\tname={`Error: ${error}!`}\n\t\t\t\t\tdescription={'Failed to fetch data from the server.'}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<div className='five-day-cards'>\n\t\t\t\t{DailyForecasts.map((day, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Card className='five-day-card' key={index}>\n\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t<Card.Title className='five-day-card-title'>\n\t\t\t\t\t\t\t\t\t{days[new Date(day.EpochDate * 1000).getDay()]}\n\t\t\t\t\t\t\t\t</Card.Title>\n\t\t\t\t\t\t\t\t<Card.Subtitle className=\"mb-2 five-day-card-subtitle\">\n\t\t\t\t\t\t\t\t\t{Math.round((day.Temperature.Minimum.Value + day.Temperature.Maximum.Value) / 2)}&deg;C\n\t\t\t\t\t\t\t\t</Card.Subtitle>\n\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t\t<div className='error-msg'>\n\t\t\t\t\t{fetchError}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FiveDayForecast);","import React from 'react';\nimport './WeatherDetails.css';\nimport { Alert } from 'react-bootstrap';\nimport FavoritesButton from '../FavoritesButton/FavoritesButton';\nimport CurrentWeather from '../CurrentWeather/CurrentWeather';\nimport FiveDayForecast from '../FiveDayForecast/FiveDayForecast';\n\nconst WeatherDetails = ({ location }) => {\n\treturn (\n\t\t<div>\n\t\t\t<Alert className='background-box' variant={'success'}>\n\t\t\t\t<FavoritesButton location={location} />\n\t\t\t\t<CurrentWeather location={location} />\n\t\t\t\t<FiveDayForecast location={location} />\n\t\t\t</Alert>\n\t\t</div>\n\t);\n}\n\nexport default WeatherDetails;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Card } from 'react-bootstrap';\nimport HandleError from '../HandleError';\nimport { requestFavoritesCurrentConditions } from '../../actions';\n\nimport './Favorites.css';\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tisPending: state.updateFavorites.isPending,\n\t\tfavCitiesData: state.updateFavorites.favCitiesData,\n\t\terror: state.updateFavorites.error\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonRequestFavoritesCurrentConditions: (favCities) => dispatch(requestFavoritesCurrentConditions(favCities))\n\t}\n}\n\nclass Favorites extends Component {\n\tcomponentDidMount() {\n\t\tlet favCities = JSON.parse(localStorage.getItem('Favorite Cities'));\n\t\tif (favCities) {\n\t\t\tthis.props.onRequestFavoritesCurrentConditions(favCities);\n\t\t}\n\t}\n\n\thandleOnClick = (cityData) =>{\n\t\tthis.props.onLocationChange({\n\t\t\tkey: cityData.location.key,\n\t\t\tcity: cityData.location.city\n\t\t});\n\t\tthis.props.onRouteChange('home');\n\t}\n\n\trender() {\n\t\tconst { favCitiesData, error } = this.props;\n\t\t\n\t\tlet fetchError;\n\t\tif (error) {\n\t\t\tfetchError = (\n\t\t\t\t<HandleError\n\t\t\t\t\tname={`Error: ${error}!`}\n\t\t\t\t\tdescription={`Failed to fetch data from the server.`}\n\t\t\t\t/>\n\t\t\t);\n\t\t\treturn (\n\t\t\t\t<div className='error-msg'>\n\t\t\t\t\t{fetchError}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\tif (!favCitiesData.length) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet cards = favCitiesData.map((cityData) => (\n\t\t\t<Card className='favorites-card' key={cityData.location.key}>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<Card.Title\n\t\t\t\t\t\tclassName='favorites-card-title'\n\t\t\t\t\t\tonClick={() => this.handleOnClick(cityData)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{cityData.location.city}\n\t\t\t\t\t</Card.Title>\n\t\t\t\t\t<Card.Subtitle className=\"mb-2 favorites-card-subtitle\">\n\t\t\t\t\t\t<h3>{cityData.degreesC}&deg;C</h3>\n\t\t\t\t\t\t<h6>{cityData.weatherText}</h6>\n\t\t\t\t\t</Card.Subtitle>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t));\n\n\t\treturn (\n\t\t\t<div className='favorites-cards'>\n\t\t\t\t{ cards }\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorites);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Navigation from '../components/Navigation/Navigation';\nimport SearchField from '../components/SearchField/SearchField';\nimport WeatherDetails from '../components/WeatherDetails/WeatherDetails';\nimport Favorites from '../components/Favorites/Favorites';\nimport HandleError from '../components/HandleError';\nimport { setRoute, setLocation, requestCurrentPosition } from '../actions';\n\nimport './App.css';\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\troute: state.changeRoute.route,\n\t\tisPending: state.changeLocation.isPending,\n\t\tlocation: state.changeLocation.location,\n\t\terror: state.changeLocation.error\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonRouteChange: (route) => dispatch(setRoute(route)),\n\t\tonLocationChange: (location) => dispatch(setLocation(location)),\n\t\tonRequestCurrentPosition: () => dispatch(requestCurrentPosition())\n\t}\n}\n\nclass App extends Component {\n\tcomponentDidMount() {\n\t\tthis.props.onRequestCurrentPosition();\n\t}\n\n\trender() {\n\t\tconst { route, onRouteChange, location, onLocationChange, error } = this.props;\n\n\t\tlet fetchError;\n\t\tif (error) {\n\t\t\tfetchError = (\n\t\t\t\t<HandleError\n\t\t\t\t\tname={`Error: ${error}!`}\n\t\t\t\t\tdescription={`Failed to fetch data from the server.`}\n\t\t\t\t/>\n\t\t\t);\n\t\t\treturn (\n\t\t\t\t<div className='error-msg'>\n\t\t\t\t\t{fetchError}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Navigation\n\t\t\t\t\tonRouteChange={onRouteChange}\n\t\t\t\t\troute={route}\n\t\t\t\t/>\n\t\t\t\t{\n\t\t\t\t\troute === 'home' ?\n\t\t\t\t\t\t<div className=\"App\">\n\t\t\t\t\t\t\t<h1>Weather Forecast</h1>\n\t\t\t\t\t\t\t<SearchField onLocationChange={onLocationChange} />\n\t\t\t\t\t\t\t<WeatherDetails location={location} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t: <div className=\"App\">\n\t\t\t\t\t\t\t<h1>My Favorites</h1>\n\t\t\t\t\t\t\t<Favorites\n\t\t\t\t\t\t\t\tonLocationChange={onLocationChange}\n\t\t\t\t\t\t\t\tonRouteChange={onRouteChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/* App component */\nimport {\n\tSET_ROUTE,\n\tSET_LOCATION,\n\tREQUEST_CURRENT_POSITION_PENDING,\n\tREQUEST_CURRENT_POSITION_SUCCESS,\n\tREQUEST_CURRENT_POSITION_FAILED\n} from './actionTypes';\n\n/* SearchField component */\nimport {\n\tUPDATE_INPUT,\n\tREQUEST_SEARCH_OPTIONS_PENDING,\n\tREQUEST_SEARCH_OPTIONS_SUCCESS,\n\tREQUEST_SEARCH_OPTIONS_FAILED\n} from './actionTypes';\n\n/* CurrentWeather component */\nimport {\n\tREQUEST_CURRENT_WEATHER_PENDING,\n\tREQUEST_CURRENT_WEATHER_SUCCESS,\n\tREQUEST_CURRENT_WEATHER_FAILED\n} from './actionTypes';\n\n/* FiveDayForecast component */\nimport {\n\tREQUEST_FIVE_DAY_FORECAST_PENDING,\n\tREQUEST_FIVE_DAY_FORECAST_SUCCESS,\n\tREQUEST_FIVE_DAY_FORECAST_FAILED\n} from './actionTypes';\n\n/* Favorites component */\nimport {\n\tREQUEST_FAVORITES_CURRENT_CONDITIONS_PENDING,\n\tREQUEST_FAVORITES_CURRENT_CONDITIONS_SUCCESS,\n\tREQUEST_FAVORITES_CURRENT_CONDITIONS_FAILED\n} from './actionTypes';\n\n/* App component */\n\nconst initialStateRoute = {\n\troute: 'home'\n};\n\nexport const changeRoute = (state = initialStateRoute, action) => {\n\tswitch(action.type) {\n\t\tcase SET_ROUTE:\n\t\t\treturn { ...state, ...{ route: action.payload } };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nconst defaultLocation = {\n\tkey: '215854',\n\tcity: 'Tel Aviv'\n};\n\nconst initialStateLocation = {\n\tisPending: false,\n\tlocation: defaultLocation,\n\terror: ''\n};\n\nexport const changeLocation = (state = initialStateLocation, action) => {\n\tswitch (action.type) {\n\t\tcase SET_LOCATION:\n\t\t\treturn { ...state, ...{ location: action.payload } };\n\t\tcase REQUEST_CURRENT_POSITION_PENDING:\n\t\t\treturn { ...state, ...{ isPending: true } };\n\t\tcase REQUEST_CURRENT_POSITION_SUCCESS:\n\t\t\treturn { ...state, ...{ location: action.payload, isPending: false } };\n\t\tcase REQUEST_CURRENT_POSITION_FAILED:\n\t\t\treturn { ...state, ...{ error: action.payload, isPending: false } };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\n/* SearchField component */\n\nconst initialStateInput = {\n\tquery: '',\n\tisLoading: false,\n\toptions: [],\n\terror: ''\n};\n\nexport const changeInput = (state = initialStateInput, action) => {\n\tswitch (action.type) {\n\t\tcase UPDATE_INPUT:\n\t\t\treturn { ...state, ...{ query: action.payload } };\n\t\tcase REQUEST_SEARCH_OPTIONS_PENDING:\n\t\t\treturn { ...state, ...{ isLoading: true } };\n\t\tcase REQUEST_SEARCH_OPTIONS_SUCCESS:\n\t\t\treturn { ...state, ...{ options: action.payload, isLoading: false } };\n\t\tcase REQUEST_SEARCH_OPTIONS_FAILED:\n\t\t\treturn { ...state, ...{ error: action.payload, isLoading: false } };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\n/* CurrentWeather component */\n\nconst initialStateCurrentWeather = {\n\tisPending: false,\n\tcurrentWeatherData: {\n\t\tcity: '',\n\t\tdegreesC: null,\n\t\tweatherText: ''\n\t},\n\terror: ''\n};\n\nexport const changeCurrentWeather = (state = initialStateCurrentWeather, action) => {\n\tswitch (action.type) {\n\t\tcase REQUEST_CURRENT_WEATHER_PENDING:\n\t\t\treturn { ...state, ...{ isPending: true } };\n\t\tcase REQUEST_CURRENT_WEATHER_SUCCESS:\n\t\t\treturn { ...state, ...{ currentWeatherData: action.payload, isPending: false } };\n\t\tcase REQUEST_CURRENT_WEATHER_FAILED:\n\t\t\treturn { ...state, ...{ error: action.payload, isPending: false } };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\n/* FiveDayForecast component */\n\nconst initialStateFiveDayForecast = {\n\tisPending: false,\n\tDailyForecasts: [],\n\terror: ''\n};\n\nexport const changeFiveDayForecast = (state = initialStateFiveDayForecast, action) => {\n\tswitch (action.type) {\n\t\tcase REQUEST_FIVE_DAY_FORECAST_PENDING:\n\t\t\treturn { ...state, ...{ isPending: true } };\n\t\tcase REQUEST_FIVE_DAY_FORECAST_SUCCESS:\n\t\t\treturn { ...state, ...{ DailyForecasts: action.payload, isPending: false } };\n\t\tcase REQUEST_FIVE_DAY_FORECAST_FAILED:\n\t\t\treturn { ...state, ...{ error: action.payload, isPending: false } };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\n/* Favorites component */\n\nconst initialStateFavorites = {\n\tisPending: false,\n\tfavCitiesData: [],\n\terror: ''\n};\n\nexport const updateFavorites = (state = initialStateFavorites, action) => {\n\tswitch (action.type) {\n\t\tcase REQUEST_FAVORITES_CURRENT_CONDITIONS_PENDING:\n\t\t\treturn { ...state, ...{ isPending: true } };\n\t\tcase REQUEST_FAVORITES_CURRENT_CONDITIONS_SUCCESS:\n\t\t\treturn { ...state,  favCitiesData: [...state.favCitiesData, { ...action.payload }], isPending: false };\n\t\tcase REQUEST_FAVORITES_CURRENT_CONDITIONS_FAILED:\n\t\t\treturn { ...state, ...{ error: action.payload, isPending: false } };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunkMiddleware from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport {\n\tchangeRoute,\n\tchangeLocation,\n\tchangeInput,\n\tchangeCurrentWeather,\n\tchangeFiveDayForecast,\n\tupdateFavorites\n} from './reducers';\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({\n\tchangeRoute,\n\tchangeLocation,\n\tchangeInput,\n\tchangeCurrentWeather,\n\tchangeFiveDayForecast,\n\tupdateFavorites\n});\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/HeartFull.efb08012.svg\";"],"sourceRoot":""}