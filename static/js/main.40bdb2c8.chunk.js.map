{"version":3,"sources":["components/Navigation.js","components/HandleError.js","components/SearchField.js","components/FavoritesButton/FavoritesButton.js","components/CurrentWeather.js","components/FiveDayForecast.js","components/WeatherDetails.js","components/Favorites.js","containers/App.js","serviceWorker.js","index.js","components/FavoritesButton/HeartHollow.svg","components/FavoritesButton/HeartFull.svg"],"names":["navStyle","backgroundColor","Navigation","routeChange","route","Nav","className","style","variant","defaultActiveKey","Item","Link","eventKey","onClick","HandleError","name","description","Modal","Dialog","Header","Title","Body","AsyncTypeahead","asyncContainer","Typeahead","apiKey","SearchBox","props","onInputChange","query","setState","onSearch","isLoading","url","fetch","then","resp","json","options","catch","err","fetchError","message","onChange","selectedOptions","loadLocation","key","Key","city","LocalizedName","clearRequest","setTimeout","refs","SubjectTypeahead","getInstance","clear","state","mistype","this","match","width","id","ref","placeholder","labelKey","zIndex","position","top","left","React","Component","FavoritesButton","handleHeartImage","favCities","find","element","location","heartImage","HeartHollow","HeartFull","addRemoveCity","array","push","index","findIndex","splice","JSON","parse","localStorage","getItem","setItem","stringify","float","src","alt","marginRight","Button","size","CurrentWeather","fetchForecast","degreesC","Temperature","Metric","Value","weatherText","WeatherText","prevProps","Math","round","textAlign","FiveDayForecast","DailyForecasts","days","display","flexDirection","marginTop","map","day","Card","alignItems","justifyContent","Date","EpochDate","getDay","Subtitle","Minimum","Maximum","WeatherDetails","Alert","height","Favorites","fetchData","favCitiesData","forEach","handleOnClick","cityData","length","cards","marginBottom","cursor","flexWrap","marginLeft","defaultLocation","App","onRouteChange","SearchField","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.40bdb2c8.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\n\r\nconst navStyle = {\r\n\tbackgroundColor: 'rgba(250, 250, 250, 0.9)'\r\n};\r\n\r\nconst Navigation = ({ routeChange, route }) => {\r\n\treturn (\r\n\t\t<Nav className=\"justify-content-end\" style={navStyle} variant=\"pills\" defaultActiveKey=\"home\">\r\n\t\t\t<Nav.Item>\r\n\t\t\t\t<Nav.Link eventKey=\"home\" onClick={() => routeChange('home')}>\r\n\t\t\t\t\tHome\r\n\t\t\t\t</Nav.Link>\r\n\t\t\t</Nav.Item>\r\n\t\t\t<Nav.Item>\r\n\t\t\t\t<Nav.Link eventKey=\"favorites\" onClick={() => routeChange('favorites')}>\r\n\t\t\t\t\tFavorites\r\n\t\t\t\t</Nav.Link>\r\n\t\t\t</Nav.Item>\r\n\t\t</Nav>\r\n\t);\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\nconst HandleError = ({ name, description }) => {\r\n\treturn (\r\n\t\t<Modal.Dialog>\r\n\t\t\t<Modal.Header>\r\n\t\t\t\t<Modal.Title>{name}</Modal.Title>\r\n\t\t\t</Modal.Header>\r\n\t\t\t<Modal.Body>\r\n\t\t\t\t<p>{description}</p>\r\n\t\t\t</Modal.Body>\r\n\t\t</Modal.Dialog>\r\n\t);\r\n}\r\n\r\nexport default HandleError;","import React from 'react';\r\nimport { asyncContainer, Typeahead } from 'react-bootstrap-typeahead';\r\nimport HandleError from './HandleError';\r\n\r\nconst AsyncTypeahead = asyncContainer(Typeahead);\r\nconst apiKey = 'GBQOaTaovFvWYmzOoH4RFrCGKnhKaJOd';\r\n\r\nclass SearchBox extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisLoading: false,\r\n\t\t\toptions: [],\r\n\t\t\tquery: '',\r\n\t\t\tfetchError: ''\r\n\t\t}\r\n\t}\r\n\r\n\tonInputChange = (query) => {\r\n\t\tthis.setState({ query });\r\n\t}\r\n\r\n\tonSearch = (query) => {\r\n\t\tthis.setState({ isLoading: true });\r\n\r\n\t\tconst url = `https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${apiKey}&q=${query}`;\r\n\r\n\t\tfetch(url)\r\n\t\t\t.then(resp => resp.json())\r\n\t\t\t.then(json => this.setState({\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\toptions: json\r\n\t\t\t}))\r\n\t\t\t.catch(err => this.setState({ fetchError: err.message }));\r\n\t}\r\n\t\r\n\tonChange = (selectedOptions) => {\r\n\t\tthis.props.loadLocation({\r\n\t\t\tkey: selectedOptions[0].Key,\r\n\t\t\tcity: selectedOptions[0].LocalizedName\r\n\t\t});\r\n\r\n\t\tthis.clearRequest();\r\n\t}\r\n\t\r\n\tclearRequest = () => {\r\n\t\tsetTimeout(() => this.refs.SubjectTypeahead.getInstance().clear(), 0);\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet fetchError;\r\n\t\tlet mistype;\r\n\t\tconst availableChars = /^[0-9a-zA-Z]*$/;\r\n\r\n\t\tif (this.state.fetchError) {\r\n\t\t\tfetchError = (\r\n\t\t\t\t<HandleError\r\n\t\t\t\t\tname={`Error: ${this.state.fetchError}!`}\r\n\t\t\t\t\tdescription={'Failed to fetch data from the server.'}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t\tif (!this.state.query.match(availableChars)) {\r\n\t\t\tmistype = (\r\n\t\t\t\t<HandleError\r\n\t\t\t\t\tname={'Error: Mistype!'}\r\n\t\t\t\t\tdescription={'Only english letters are allowed.'}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div style={{ width: 350 }}>\r\n\t\t\t\t<AsyncTypeahead\r\n\t\t\t\t\tid=\"AsyncTypeahead\"\r\n\t\t\t\t\tref=\"SubjectTypeahead\"\r\n\t\t\t\t\tplaceholder=\"Enter location\"\r\n\t\t\t\t\tisLoading={this.state.isLoading}\r\n\t\t\t\t\tlabelKey=\"LocalizedName\"\r\n\t\t\t\t\tonInputChange={this.onInputChange}\r\n\t\t\t\t\tonSearch={this.onSearch}\r\n\t\t\t\t\toptions={this.state.options}\r\n\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<div style={{ zIndex: 1, position: 'fixed', top: 0, left: 0 }}>\r\n\t\t\t\t\t{ fetchError }\r\n\t\t\t\t\t{ mistype }\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SearchBox;","import React, { Component } from 'react';\r\nimport HeartHollow from './HeartHollow.svg';\r\nimport HeartFull from './HeartFull.svg';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass FavoritesButton extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\theartImage: HeartHollow,\r\n\t\t\tfavCities: []\r\n\t\t};\r\n\t}\r\n\r\n\thandleHeartImage = () => {\r\n\t\tif (this.state.favCities) {\r\n\t\t\tif (this.state.favCities.find(element =>\r\n\t\t\t\telement.key === this.props.location.key)) {\r\n\t\t\t\tif (this.state.heartImage === HeartHollow)\r\n\t\t\t\t\tthis.setState({ heartImage: HeartFull });\r\n\t\t\t} else {\r\n\t\t\t\tif (this.state.heartImage === HeartFull)\r\n\t\t\t\t\tthis.setState({ heartImage: HeartHollow });\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.handleHeartImage();\r\n\t\tthis.setState({ favCities: JSON.parse(localStorage.getItem('Favorite Cities')) });\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n\t\tthis.handleHeartImage();\r\n\t\tlocalStorage.setItem('Favorite Cities', JSON.stringify(this.state.favCities));\r\n\t}\r\n\r\n\taddRemoveCity = () => {\r\n\t\tlet array = [...this.state.favCities];\r\n\t\t\r\n\t\tif (this.state.heartImage === HeartHollow) {\r\n\t\t\tarray.push(this.props.location);\r\n\t\t\tthis.setState({\r\n\t\t\t\theartImage: HeartFull,\r\n\t\t\t\tfavCities: array\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tconst index = array.findIndex(element =>\r\n\t\t\t\telement.key === this.props.location.key);\r\n\t\t\t\t\r\n\t\t\tarray.splice(index, 1);\r\n\t\t\tthis.setState({\r\n\t\t\t\theartImage: HeartHollow,\r\n\t\t\t\tfavCities: array\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div style={{ float: 'right' }}>\r\n\t\t\t\t{<img src={this.state.heartImage} alt='Heart' width='35px' style={{ marginRight: 10 }}></img>}\r\n\t\t\t\t<Button variant=\"outline-danger\" size=\"sm\" onClick={this.addRemoveCity}>Add to Favorites</Button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default FavoritesButton;","import React from 'react';\r\nimport HandleError from './HandleError';\r\n\r\nconst apiKey = 'GBQOaTaovFvWYmzOoH4RFrCGKnhKaJOd';\r\n\r\nclass CurrentWeather extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcity: '',\r\n\t\t\tdegreesC: null,\r\n\t\t\tweatherText: '',\r\n\t\t\tfetchError: ''\r\n\t\t}\r\n\t}\r\n\r\n\tfetchForecast = () => {\r\n\t\tconst url = `https://dataservice.accuweather.com/currentconditions/v1/${this.props.location.key}?apikey=${apiKey}`;\r\n\r\n\t\tfetch(url)\r\n\t\t\t.then(resp => resp.json())\r\n\t\t\t.then(json => this.setState({\r\n\t\t\t\tcity: this.props.location.city,\r\n\t\t\t\tdegreesC: json[0].Temperature.Metric.Value,\r\n\t\t\t\tweatherText: json[0].WeatherText\r\n\t\t\t}))\r\n\t\t\t.catch(err => this.setState({ fetchError: err.message }));\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.fetchForecast();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tconst prevLocation = prevProps.location || {};\r\n\t\tif (prevLocation.key !== this.props.location.key) {\r\n\t\t\tthis.fetchForecast();\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet fetchError;\r\n\r\n\t\tif (this.state.fetchError) {\r\n\t\t\tfetchError = (\r\n\t\t\t\t<HandleError\r\n\t\t\t\t\tname={`Error: ${this.state.fetchError}!`}\r\n\t\t\t\t\tdescription={'Failed to fetch data from the server.'}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h5>{this.state.city}</h5>\r\n\t\t\t\t<h6>{Math.round(this.state.degreesC)}&deg;C</h6>\r\n\t\t\t\t<h2 style={{ textAlign: 'center' }}>{this.state.weatherText}</h2>\r\n\t\t\t\t<div style={{ zIndex: 1, position: 'fixed', top: 0, left: 0 }}>\r\n\t\t\t\t\t{fetchError}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default CurrentWeather;","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport HandleError from './HandleError';\r\n\r\nconst apiKey = 'GBQOaTaovFvWYmzOoH4RFrCGKnhKaJOd';\r\n\r\nclass FiveDayForecast extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tDailyForecasts: [],\r\n\t\t\tfetchError: ''\r\n\t\t}\r\n\t}\r\n\r\n\tfetchForecast = () => {\r\n\t\tconst url = `https://dataservice.accuweather.com/forecasts/v1/daily/5day/${this.props.location.key}?apikey=${apiKey}&metric=true`;\r\n\r\n\t\tfetch(url)\r\n\t\t\t.then(resp => resp.json())\r\n\t\t\t.then(json => this.setState({\r\n\t\t\t\tDailyForecasts: json.DailyForecasts\r\n\t\t\t}))\r\n\t\t\t.catch(err => this.setState({ fetchError: err.message }));\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.fetchForecast();\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tconst prevLocation = prevProps.location || {};\r\n\t\tif (prevLocation.key !== this.props.location.key) {\r\n\t\t\tthis.fetchForecast();\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n\t\tlet fetchError;\r\n\r\n\t\tif (this.state.fetchError) {\r\n\t\t\tfetchError = (\r\n\t\t\t\t<HandleError\r\n\t\t\t\t\tname={`Error: ${this.state.fetchError}!`}\r\n\t\t\t\t\tdescription={'Failed to fetch data from the server.'}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div style={{ display: 'flex', flexDirection: 'row', marginTop: '2rem' }}>\r\n\t\t\t\t{this.state.DailyForecasts.map((day, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Card key={index} style={{ width: '18rem' }}>\r\n\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t<Card.Title style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>{days[new Date(day.EpochDate * 1000).getDay()]}</Card.Title>\r\n\t\t\t\t\t\t\t\t<Card.Subtitle className=\"mb-2\" style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n\t\t\t\t\t\t\t\t\t{Math.round((day.Temperature.Minimum.Value + day.Temperature.Maximum.Value) / 2)}&deg;C\r\n\t\t\t\t\t\t\t\t</Card.Subtitle>\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t\t<div style={{ zIndex: 1, position: 'fixed', top: 0, left: 0 }}>\r\n\t\t\t\t\t{fetchError}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default FiveDayForecast;","import React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\nimport FavoritesButton from './FavoritesButton/FavoritesButton';\r\nimport CurrentWeather from './CurrentWeather';\r\nimport FiveDayForecast from './FiveDayForecast';\r\n\r\nconst WeatherDetails = ({ location }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Alert variant={'success'} style={{ marginTop: 5, width: 460, height: 260 }}>\r\n\t\t\t\t<FavoritesButton location={location} />\r\n\t\t\t\t<CurrentWeather location={location} />\r\n\t\t\t\t<FiveDayForecast location={location} />\r\n\t\t\t</Alert>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default WeatherDetails;","import React, { Component } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport HandleError from './HandleError';\r\n\r\nconst apiKey = 'GBQOaTaovFvWYmzOoH4RFrCGKnhKaJOd';\r\n\r\nclass Favorites extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfavCitiesData: [],\r\n\t\t\tfetchError: ''\r\n\t\t};\r\n\t}\r\n\t\r\n\tfetchData = (favCities) => {\r\n\t\tlet favCitiesData = [];\r\n\t\tfavCities.forEach((location) => {\r\n\t\t\tconst url = `https://dataservice.accuweather.com/currentconditions/v1/${location.key}?apikey=${apiKey}`;\r\n\t\t\tfetch(url)\r\n\t\t\t\t.then(resp => resp.json())\r\n\t\t\t\t.then(json => {\r\n\t\t\t\t\tlet degreesC = Math.round(json[0].Temperature.Metric.Value);\r\n\t\t\t\t\tlet weatherText = json[0].WeatherText;\r\n\t\t\t\t\tfavCitiesData.push({ location, degreesC, weatherText });\r\n\t\t\t\t\tthis.setState({ favCitiesData });\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err => this.setState({ fetchError: err.message }));\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tif (favCities) {\r\n\t\t\tthis.fetchData(favCities);\r\n\t\t}\r\n\t\tlet favCities = JSON.parse(localStorage.getItem('Favorite Cities'));\r\n\t}\r\n\r\n\thandleOnClick = (cityData) =>{\r\n\t\tthis.props.loadLocation({\r\n\t\t\tkey: cityData.location.key,\r\n\t\t\tcity: cityData.location.city\r\n\t\t});\r\n\t\tthis.props.routeChange('home');\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet fetchError;\r\n\t\tif (this.state.fetchError) {\r\n\t\t\tfetchError = (\r\n\t\t\t\t<HandleError\r\n\t\t\t\t\tname={`Error: ${this.state.fetchError}!`}\r\n\t\t\t\t\tdescription={`Failed to fetch data from the server.`}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t\treturn (\r\n\t\t\t\t<div style={{ zIndex: 1, position: 'fixed', top: 0, left: 0 }}>\r\n\t\t\t\t\t{fetchError}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif (!this.state.favCitiesData.length)\r\n\t\treturn null;\r\n\r\n\t\tlet cards = this.state.favCitiesData.map((cityData) => (\r\n\t\t\t<Card key={cityData.location.key} style={{ display: 'flex', alignItems: 'center', width: '150px', marginRight: '1rem', marginBottom: '1rem' }}>\r\n\t\t\t\t<Card.Body>\r\n\t\t\t\t\t<Card.Title \r\n\t\t\t\t\t\tstyle={{ display: 'flex', alignItems: 'center',justifyContent: 'center', marginTop: '.5rem', marginBottom: '1.5rem', cursor: 'pointer' }}\r\n\t\t\t\t\t\tonClick={() => this.handleOnClick(cityData)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{cityData.location.city}\r\n\t\t\t\t\t</Card.Title>\r\n\t\t\t\t\t<Card.Subtitle className=\"mb-2\" style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n\t\t\t\t\t\t<h3>{cityData.degreesC}&deg;C</h3>\r\n\t\t\t\t\t\t<h6>{cityData.weatherText}</h6>\r\n\t\t\t\t\t</Card.Subtitle>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t</Card>\r\n\t\t));\r\n\r\n\t\treturn (\r\n\t\t\t<div style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap', marginTop: '1.5rem', marginLeft: '1rem' }}>\r\n\t\t\t\t{ cards }\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Favorites;","import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from '../components/Navigation';\nimport SearchField from '../components/SearchField';\nimport WeatherDetails from '../components/WeatherDetails';\nimport Favorites from '../components/Favorites';\n\nconst defaultLocation = {\n\tkey: '215854',\n\tcity: 'Tel Aviv'\n};\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\troute: 'home',\n\t\t\tlocation: defaultLocation\n\t\t};\n\t}\n\n\tonRouteChange = (route) => {\n\t\tthis.setState({ route });\n\t}\n\n\tloadLocation = (location) => {\n\t\tthis.setState({ location });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Navigation\n\t\t\t\t\trouteChange={this.onRouteChange}\n\t\t\t\t\troute={this.state.route}\n\t\t\t\t/>\n\t\t\t\t{\t\n\t\t\t\t\tthis.state.route === 'home' ?\n\t\t\t\t\t\t<div className=\"App\">\n\t\t\t\t\t\t\t<h1>What's The Weather</h1>\n\t\t\t\t\t\t\t<SearchField loadLocation={this.loadLocation} />\n\t\t\t\t\t\t\t<WeatherDetails location={this.state.location} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t: <Favorites\n\t\t\t\t\t\t\tloadLocation={this.loadLocation}\n\t\t\t\t\t\t\trouteChange={this.onRouteChange}\n\t\t\t\t\t\t/>\n\t\t\t\t}\t\t\t\t\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/HeartHollow.4ed65843.svg\";","module.exports = __webpack_public_path__ + \"static/media/HeartFull.efb08012.svg\";"],"sourceRoot":""}