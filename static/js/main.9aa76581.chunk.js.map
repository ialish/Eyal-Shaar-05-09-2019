{"version":3,"sources":["components/FavoritesButton/HeartHollow.svg","components/Navigation/Navigation.js","components/HandleError.js","actions.js","components/SearchField/SearchField.js","actionTypes.js","components/FavoritesButton/FavoritesButton.js","components/CurrentWeather/CurrentWeather.js","components/FiveDayForecast/FiveDayForecast.js","components/WeatherDetails/WeatherDetails.js","components/Favorites/Favorites.js","containers/App.js","serviceWorker.js","reducers.js","index.js","components/FavoritesButton/HeartFull.svg"],"names":["module","exports","Navigation","onRouteChange","route","Nav","className","defaultActiveKey","Item","Link","eventKey","onClick","HandleError","name","description","useState","show","setShow","Toast","onClose","Header","Body","apiKey","process","AsyncTypeahead","asyncContainer","Typeahead","SearchField","onChange","selectedOptions","props","onLocationChange","key","Key","city","LocalizedName","clearRequest","setTimeout","refs","SubjectTypeahead","getInstance","clear","fetchError","mistype","this","query","onInputChange","onSearch","isLoading","options","error","match","id","ref","placeholder","labelKey","React","Component","connect","state","changeInput","dispatch","type","payload","updateInput","url","fetch","then","response","json","data","catch","message","requestSearchOptions","FavoritesButton","handleHeartImage","favCities","find","element","location","heartImage","HeartHollow","setState","HeartFull","addRemoveCity","array","push","index","findIndex","splice","JSON","parse","localStorage","getItem","setItem","stringify","src","alt","width","Button","variant","size","CurrentWeather","onRequestCurrentWeather","prevProps","currentWeatherData","Math","round","degreesC","weatherText","isPending","changeCurrentWeather","ownProps","Temperature","Metric","Value","WeatherText","FiveDayForecast","onRequestFiveDayForecast","DailyForecasts","days","map","day","Card","Title","Date","EpochDate","getDay","Subtitle","Minimum","Maximum","changeFiveDayForecast","WeatherDetails","Alert","Favorites","handleOnClick","cityData","clearData","onRequestFavoritesCurrentConditions","favCitiesData","length","cards","updateFavorites","forEach","requestFavoritesCurrentConditions","App","onRequestCurrentPosition","changeRoute","changeLocation","setRoute","setLocation","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","Boolean","window","hostname","initialStateRoute","initialStateLocation","initialStateInput","initialStateCurrentWeather","initialStateFiveDayForecast","initialStateFavorites","logger","createLogger","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9aa76581.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/HeartHollow.4ed65843.svg\";","import React from 'react';\r\nimport './Navigation.css';\r\nimport { Nav } from 'react-bootstrap';\r\n\r\nconst Navigation = ({ onRouteChange, route }) => {\r\n\treturn (\r\n\t\t<Nav className=\"justify-content-end nav-bar\" defaultActiveKey={route}>\r\n\t\t\t<Nav.Item>\r\n\t\t\t\t<Nav.Link eventKey=\"home\" onClick={() => onRouteChange('home')}>\r\n\t\t\t\t\tHome\r\n\t\t\t\t</Nav.Link>\r\n\t\t\t</Nav.Item>\r\n\t\t\t<Nav.Item>\r\n\t\t\t\t<Nav.Link eventKey=\"favorites\" onClick={() => onRouteChange('favorites')}>\r\n\t\t\t\t\tFavorites\r\n\t\t\t\t</Nav.Link>\r\n\t\t\t</Nav.Item>\r\n\t\t</Nav>\r\n\t);\r\n}\r\n\r\nexport default Navigation;","import React, { useState } from 'react';\r\nimport { Toast } from 'react-bootstrap';\r\n\r\nconst HandleError = ({ name, description }) => {\r\n\tconst [show, setShow] = useState(true);\r\n\tconst toggleShow = () => setShow(!show);\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Toast show={show} onClose={toggleShow}>\r\n\t\t\t\t<Toast.Header>\r\n\t\t\t\t\t<strong className=\"mr-auto\">{name}</strong>\r\n\t\t\t\t</Toast.Header>\r\n\t\t\t\t<Toast.Body>{description}</Toast.Body>\r\n\t\t\t</Toast>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default HandleError;","/* App component */\r\nimport {\r\n\tSET_ROUTE,\r\n\tSET_LOCATION,\r\n\tREQUEST_CURRENT_POSITION_PENDING,\r\n\tREQUEST_CURRENT_POSITION_SUCCESS,\r\n\tREQUEST_CURRENT_POSITION_FAILED\r\n} from './actionTypes';\r\n\r\n/* SearchField component */\r\nimport {\r\n\tUPDATE_INPUT,\r\n\tREQUEST_SEARCH_OPTIONS_PENDING,\r\n\tREQUEST_SEARCH_OPTIONS_SUCCESS,\r\n\tREQUEST_SEARCH_OPTIONS_FAILED\r\n} from './actionTypes';\r\n\r\n/* CurrentWeather component */\r\nimport {\r\n\tREQUEST_CURRENT_WEATHER_PENDING,\r\n\tREQUEST_CURRENT_WEATHER_SUCCESS,\r\n\tREQUEST_CURRENT_WEATHER_FAILED\r\n} from './actionTypes';\r\n\r\n/* FiveDayForecast component */\r\nimport {\r\n\tREQUEST_FIVE_DAY_FORECAST_PENDING,\r\n\tREQUEST_FIVE_DAY_FORECAST_SUCCESS,\r\n\tREQUEST_FIVE_DAY_FORECAST_FAILED\r\n} from './actionTypes';\r\n\r\n/* Favorites component */\r\nimport {\r\n\tCLEAR_DATA,\r\n\tREQUEST_FAVORITES_CURRENT_CONDITIONS_PENDING,\r\n\tREQUEST_FAVORITES_CURRENT_CONDITIONS_SUCCESS,\r\n\tREQUEST_FAVORITES_CURRENT_CONDITIONS_FAILED\r\n} from './actionTypes';\r\n\r\nconst apiKey = process.env.REACT_APP_API_KEY;\r\n\r\n/* App component */\r\n\r\nexport const setRoute = (route) => {\r\n\treturn {\r\n\t\ttype: SET_ROUTE,\r\n\t\tpayload: route\r\n\t}\r\n}\r\n\r\nexport const setLocation = (location) => {\r\n\treturn {\r\n\t\ttype: SET_LOCATION,\r\n\t\tpayload: location\r\n\t}\r\n}\r\n\r\nexport const requestCurrentPosition = () => {\r\n\treturn (dispatch) => {\r\n\t\tdispatch({ type: REQUEST_CURRENT_POSITION_PENDING });\r\n\t\tif (navigator.geolocation) {\r\n\t\t\tnavigator.geolocation.getCurrentPosition((position) => {\r\n\t\t\t\tconst latitude = position.coords.latitude;\r\n\t\t\t\tconst longitude = position.coords.longitude;\r\n\t\t\t\tconst url = `https://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=${apiKey}&q=${latitude}%2C${longitude}`;\r\n\t\t\t\treturn fetch(url)\r\n\t\t\t\t\t.then((response) => response.json())\r\n\t\t\t\t\t.then((data) => dispatch({\r\n\t\t\t\t\t\ttype: REQUEST_CURRENT_POSITION_SUCCESS,\r\n\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\tkey: data.Key,\r\n\t\t\t\t\t\t\tcity: data.LocalizedName\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}))\r\n\t\t\t\t\t.catch((error) => dispatch({\r\n\t\t\t\t\t\ttype: REQUEST_CURRENT_POSITION_FAILED,\r\n\t\t\t\t\t\tpayload: error.message\r\n\t\t\t\t\t}));\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/* SearchField component */\r\n\r\nexport const updateInput = (query) => {\r\n\treturn {\r\n\t\ttype: UPDATE_INPUT,\r\n\t\tpayload: query\r\n\t}\r\n}\r\n\r\nexport const requestSearchOptions = (query) => {\r\n\treturn (dispatch) => {\r\n\t\tdispatch({ type: REQUEST_SEARCH_OPTIONS_PENDING });\r\n\t\tconst url = `https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${apiKey}&q=${query}`;\r\n\t\treturn fetch(url)\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((data) => dispatch({\r\n\t\t\t\ttype: REQUEST_SEARCH_OPTIONS_SUCCESS,\r\n\t\t\t\tpayload: data\r\n\t\t\t}))\r\n\t\t\t.catch((error) => dispatch({\r\n\t\t\t\ttype: REQUEST_SEARCH_OPTIONS_FAILED,\r\n\t\t\t\tpayload: error.message\r\n\t\t\t}));\r\n\t}\r\n}\r\n\r\n/* CurrentWeather component */\r\n\r\nexport const requestCurrentWeather = (location) => {\r\n\treturn (dispatch) => {\r\n\t\tdispatch({ type: REQUEST_CURRENT_WEATHER_PENDING });\r\n\t\tconst url = `https://dataservice.accuweather.com/currentconditions/v1/${location.key}?apikey=${apiKey}`;\r\n\t\treturn fetch(url)\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((data) => dispatch({\r\n\t\t\t\ttype: REQUEST_CURRENT_WEATHER_SUCCESS,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tcity: location.city,\r\n\t\t\t\t\tdegreesC: data[0].Temperature.Metric.Value,\r\n\t\t\t\t\tweatherText: data[0].WeatherText\r\n\t\t\t\t}\r\n\t\t\t}))\r\n\t\t\t.catch((error) => dispatch({\r\n\t\t\t\ttype: REQUEST_CURRENT_WEATHER_FAILED,\r\n\t\t\t\tpayload: error.message\r\n\t\t\t}));\r\n\t}\r\n}\r\n\r\n/* FiveDayForecast component */\r\n\r\nexport const requestFiveDayForecast = (location) => {\r\n\treturn (dispatch) => {\r\n\t\tdispatch({ type: REQUEST_FIVE_DAY_FORECAST_PENDING });\r\n\t\tconst url = `https://dataservice.accuweather.com/forecasts/v1/daily/5day/${location.key}?apikey=${apiKey}&metric=true`;\r\n\t\treturn fetch(url)\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((data) => dispatch({\r\n\t\t\t\ttype: REQUEST_FIVE_DAY_FORECAST_SUCCESS,\r\n\t\t\t\tpayload: data.DailyForecasts\r\n\t\t\t}))\r\n\t\t\t.catch((error) => dispatch({\r\n\t\t\t\ttype: REQUEST_FIVE_DAY_FORECAST_FAILED,\r\n\t\t\t\tpayload: error.message\r\n\t\t\t}));\r\n\t}\r\n}\r\n\r\n/* Favorites component */\r\n\r\nexport const clearFavCitiesData = () => {\r\n\treturn {\r\n\t\ttype: CLEAR_DATA,\r\n\t\tpayload: []\r\n\t}\r\n}\r\n\r\nexport const requestFavoritesCurrentConditions = (favCities) => {\r\n\treturn (dispatch) => {\r\n\t\tfavCities.forEach((location) => {\r\n\t\t\tdispatch({ type: REQUEST_FAVORITES_CURRENT_CONDITIONS_PENDING });\r\n\t\t\tconst url = `https://dataservice.accuweather.com/currentconditions/v1/${location.key}?apikey=${apiKey}`;\r\n\t\t\treturn fetch(url)\r\n\t\t\t\t.then((response) => response.json())\r\n\t\t\t\t.then((data) => {\r\n\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\ttype: REQUEST_FAVORITES_CURRENT_CONDITIONS_SUCCESS,\r\n\t\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\t\tlocation,\r\n\t\t\t\t\t\t\tdegreesC: Math.round(data[0].Temperature.Metric.Value),\r\n\t\t\t\t\t\t\tweatherText: data[0].WeatherText\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => dispatch({\r\n\t\t\t\t\ttype: REQUEST_FAVORITES_CURRENT_CONDITIONS_FAILED,\r\n\t\t\t\t\tpayload: error.message\r\n\t\t\t\t}));\r\n\t\t});\r\n\t}\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { asyncContainer, Typeahead } from 'react-bootstrap-typeahead';\r\nimport HandleError from '../HandleError';\r\nimport { updateInput, requestSearchOptions } from '../../actions';\r\n\r\nimport './SearchField.css';\r\n\r\nconst AsyncTypeahead = asyncContainer(Typeahead);\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tquery: state.changeInput.query,\r\n\t\tisLoading: state.changeInput.isLoading,\r\n\t\toptions: state.changeInput.options,\r\n\t\terror: state.changeInput.error\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tonInputChange: (query) => dispatch(updateInput(query)),\r\n\t\tonSearch: (query) => dispatch(requestSearchOptions(query))\r\n\t}\r\n}\r\n\r\nclass SearchField extends React.Component {\r\n\tonChange = (selectedOptions) => {\r\n\t\tthis.props.onLocationChange({\r\n\t\t\tkey: selectedOptions[0].Key,\r\n\t\t\tcity: selectedOptions[0].LocalizedName\r\n\t\t});\r\n\r\n\t\tthis.clearRequest();\r\n\t}\r\n\t\r\n\tclearRequest = () => {\r\n\t\tsetTimeout(() => this.refs.SubjectTypeahead.getInstance().clear(), 0);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { query, onInputChange, onSearch, isLoading, options, error } = this.props;\r\n\r\n\t\tlet fetchError;\r\n\t\tif (error) {\r\n\t\t\tfetchError = (\r\n\t\t\t\t<HandleError\r\n\t\t\t\t\tname={`Error: ${error}!`}\r\n\t\t\t\t\tdescription={`Failed to fetch data from the server.`}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t\treturn (\r\n\t\t\t\t<div className='error-msg'>\r\n\t\t\t\t\t{fetchError}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\t\t\r\n\t\tlet mistype;\r\n\t\tconst availableChars = /^[0-9a-zA-Z ]*$/;\r\n\t\tif (!query.match(availableChars)) {\r\n\t\t\tmistype = (\r\n\t\t\t\t<HandleError\r\n\t\t\t\t\tname={'Error: Mistype!'}\r\n\t\t\t\t\tdescription={'Only english letters are allowed.'}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div className='search-field'>\r\n\t\t\t\t<AsyncTypeahead\r\n\t\t\t\t\tid=\"AsyncTypeahead\"\r\n\t\t\t\t\tref=\"SubjectTypeahead\"\r\n\t\t\t\t\tplaceholder=\"Enter location\"\r\n\t\t\t\t\tisLoading={isLoading}\r\n\t\t\t\t\tlabelKey=\"LocalizedName\"\r\n\t\t\t\t\tonInputChange={onInputChange}\r\n\t\t\t\t\tonSearch={onSearch}\r\n\t\t\t\t\toptions={options}\r\n\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className='error-msg'>\r\n\t\t\t\t\t{ mistype }\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchField);","/* App component */\r\nexport const SET_ROUTE = 'SET_ROUTE';\r\nexport const SET_LOCATION = 'SET_LOCATION';\r\nexport const REQUEST_CURRENT_POSITION_PENDING = 'REQUEST_CURRENT_POSITION_PENDING';\r\nexport const REQUEST_CURRENT_POSITION_SUCCESS = 'REQUEST_CURRENT_POSITION_SUCCESS';\r\nexport const REQUEST_CURRENT_POSITION_FAILED = 'REQUEST_CURRENT_POSITION_FAILED';\r\n\r\n/* SearchField component */\r\nexport const UPDATE_INPUT = 'UPDATE_INPUT;'\r\nexport const REQUEST_SEARCH_OPTIONS_PENDING = 'REQUEST_SEARCH_OPTIONS_PENDING';\r\nexport const REQUEST_SEARCH_OPTIONS_SUCCESS = 'REQUEST_SEARCH_OPTIONS_SUCCESS';\r\nexport const REQUEST_SEARCH_OPTIONS_FAILED = 'REQUEST_SEARCH_OPTIONS_FAILED';\r\n\r\n/* CurrentWeather component */\r\nexport const REQUEST_CURRENT_WEATHER_PENDING = 'REQUEST_CURRENT_WEATHER_PENDING';\r\nexport const REQUEST_CURRENT_WEATHER_SUCCESS = 'REQUEST_CURRENT_WEATHER_SUCCESS';\r\nexport const REQUEST_CURRENT_WEATHER_FAILED = 'REQUEST_CURRENT_WEATHER_FAILED';\r\n\r\n/* FiveDayForecast component */\r\nexport const REQUEST_FIVE_DAY_FORECAST_PENDING = 'REQUEST_FIVE_DAY_FORECAST_PENDING';\r\nexport const REQUEST_FIVE_DAY_FORECAST_SUCCESS = 'REQUEST_FIVE_DAY_FORECAST_SUCCESS';\r\nexport const REQUEST_FIVE_DAY_FORECAST_FAILED = 'REQUEST_FIVE_DAY_FORECAST_FAILED';\r\n\r\n/* Favorites component */\r\nexport const CLEAR_DATA = 'CLEAR_DATA';\r\nexport const REQUEST_FAVORITES_CURRENT_CONDITIONS_PENDING = 'REQUEST_FAVORITES_CURRENT_CONDITIONS_PENDING';\r\nexport const REQUEST_FAVORITES_CURRENT_CONDITIONS_SUCCESS = 'REQUEST_FAVORITES_CURRENT_CONDITIONS_SUCCESS';\r\nexport const REQUEST_FAVORITES_CURRENT_CONDITIONS_FAILED = 'REQUEST_FAVORITES_CURRENT_CONDITIONS_FAILED';","import React, { Component } from 'react';\r\nimport './FavoritesButton.css';\r\nimport HeartHollow from './HeartHollow.svg';\r\nimport HeartFull from './HeartFull.svg';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass FavoritesButton extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tfavCities: [],\r\n\t\t\theartImage: HeartHollow\r\n\t\t};\r\n\t}\r\n\r\n\thandleHeartImage = () => {\r\n\t\tif (this.state.favCities) {\r\n\t\t\tif (this.state.favCities.find(element =>\r\n\t\t\t\telement.key === this.props.location.key)) {\r\n\t\t\t\tif (this.state.heartImage === HeartHollow)\r\n\t\t\t\t\tthis.setState({ heartImage: HeartFull });\r\n\t\t\t} else {\r\n\t\t\t\tif (this.state.heartImage === HeartFull)\r\n\t\t\t\t\tthis.setState({ heartImage: HeartHollow });\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.setState({ favCities: JSON.parse(localStorage.getItem('Favorite Cities')) });\r\n\t\tthis.handleHeartImage();\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n\t\tthis.handleHeartImage();\r\n\t\tlocalStorage.setItem('Favorite Cities', JSON.stringify(this.state.favCities));\r\n\t}\r\n\r\n\taddRemoveCity = () => {\r\n\t\tlet array;\r\n\r\n\t\tif (this.state.favCities) {\r\n\t\t\tarray = [...this.state.favCities];\r\n\t\t} else {\r\n\t\t\tarray = [];\r\n\t\t}\r\n\t\t\r\n\t\tif (this.state.heartImage === HeartHollow) {\r\n\t\t\tarray.push(this.props.location);\r\n\t\t\tthis.setState({\r\n\t\t\t\theartImage: HeartFull,\r\n\t\t\t\tfavCities: array\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tconst index = array.findIndex(element =>\r\n\t\t\t\telement.key === this.props.location.key);\r\n\t\t\t\t\r\n\t\t\tarray.splice(index, 1);\r\n\t\t\tthis.setState({\r\n\t\t\t\theartImage: HeartHollow,\r\n\t\t\t\tfavCities: array\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='favorites-button'>\r\n\t\t\t\t<img src={this.state.heartImage} alt='Heart' width='35px'></img>\r\n\t\t\t\t<Button variant=\"outline-danger\" size=\"sm\" onClick={this.addRemoveCity}>Add to Favorites</Button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default FavoritesButton;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport HandleError from '../HandleError';\r\nimport { requestCurrentWeather } from '../../actions';\r\n\r\nimport './CurrentWeather.css';\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tisPending: state.changeCurrentWeather.isPending,\r\n\t\tcurrentWeatherData: state.changeCurrentWeather.currentWeatherData,\r\n\t\terror: state.changeCurrentWeather.error\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n\treturn {\r\n\t\tonRequestCurrentWeather: () => dispatch(requestCurrentWeather(ownProps.location))\r\n\t}\r\n}\r\n\r\nclass CurrentWeather extends React.Component {\r\n\tcomponentDidMount() {\r\n\t\tthis.props.onRequestCurrentWeather();\r\n\t}\r\n\t\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tconst prevLocation = prevProps.location || {};\r\n\t\tif (prevLocation.key !== this.props.location.key) {\r\n\t\t\tthis.props.onRequestCurrentWeather();\r\n\t\t}\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst { currentWeatherData, error } = this.props;\r\n\r\n\t\tlet fetchError;\r\n\t\tif (error) {\r\n\t\t\tfetchError = (\r\n\t\t\t\t<HandleError\r\n\t\t\t\t\tname={`Error: ${error}!`}\r\n\t\t\t\t\tdescription={`Failed to fetch data from the server.`}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t\treturn (\r\n\t\t\t\t<div className='error-msg'>\r\n\t\t\t\t\t{fetchError}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h5 className='city'>{currentWeatherData.city}</h5>\r\n\t\t\t\t<h6>{Math.round(currentWeatherData.degreesC)}&deg;C</h6>\r\n\t\t\t\t<h2 className='weather-text'>{currentWeatherData.weatherText}</h2>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrentWeather);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Card } from 'react-bootstrap';\r\nimport HandleError from '../HandleError';\r\nimport { requestFiveDayForecast } from '../../actions';\r\n\r\nimport './FiveDayForecast.css';\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tisPending: state.changeFiveDayForecast.isPending,\r\n\t\tDailyForecasts: state.changeFiveDayForecast.DailyForecasts,\r\n\t\terror: state.changeFiveDayForecast.error\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n\treturn {\r\n\t\tonRequestFiveDayForecast: () => dispatch(requestFiveDayForecast(ownProps.location))\r\n\t}\r\n}\r\n\r\nclass FiveDayForecast extends React.Component {\r\n\tcomponentDidMount() {\r\n\t\tthis.props.onRequestFiveDayForecast();\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tconst prevLocation = prevProps.location || {};\r\n\t\tif (prevLocation.key !== this.props.location.key) {\r\n\t\t\tthis.props.onRequestFiveDayForecast();\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { DailyForecasts, error } = this.props;\r\n\t\tconst days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n\t\t\r\n\t\tlet fetchError;\r\n\t\tif (error) {\r\n\t\t\tfetchError = (\r\n\t\t\t\t<HandleError\r\n\t\t\t\t\tname={`Error: ${error}!`}\r\n\t\t\t\t\tdescription={`Failed to fetch data from the server.`}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t\treturn (\r\n\t\t\t\t<div className='error-msg'>\r\n\t\t\t\t\t{fetchError}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className='five-day-cards'>\r\n\t\t\t\t{DailyForecasts.map((day, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Card className='five-day-card' key={index}>\r\n\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t<Card.Title className='five-day-card-title'>\r\n\t\t\t\t\t\t\t\t\t{days[new Date(day.EpochDate * 1000).getDay()]}\r\n\t\t\t\t\t\t\t\t</Card.Title>\r\n\t\t\t\t\t\t\t\t<Card.Subtitle className=\"mb-2 five-day-card-subtitle\">\r\n\t\t\t\t\t\t\t\t\t{Math.round((day.Temperature.Minimum.Value + day.Temperature.Maximum.Value) / 2)}&deg;C\r\n\t\t\t\t\t\t\t\t</Card.Subtitle>\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FiveDayForecast);","import React from 'react';\r\nimport './WeatherDetails.css';\r\nimport { Alert } from 'react-bootstrap';\r\nimport FavoritesButton from '../FavoritesButton/FavoritesButton';\r\nimport CurrentWeather from '../CurrentWeather/CurrentWeather';\r\nimport FiveDayForecast from '../FiveDayForecast/FiveDayForecast';\r\n\r\nconst WeatherDetails = ({ location }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Alert className='background-box' variant={'success'}>\r\n\t\t\t\t<FavoritesButton location={location} />\r\n\t\t\t\t<CurrentWeather location={location} />\r\n\t\t\t\t<FiveDayForecast location={location} />\r\n\t\t\t</Alert>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default WeatherDetails;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Card } from 'react-bootstrap';\r\nimport HandleError from '../HandleError';\r\nimport { clearFavCitiesData, requestFavoritesCurrentConditions } from '../../actions';\r\n\r\nimport './Favorites.css';\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tisPending: state.updateFavorites.isPending,\r\n\t\tfavCitiesData: state.updateFavorites.favCitiesData,\r\n\t\terror: state.updateFavorites.error\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tclearData: () => dispatch(clearFavCitiesData()),\r\n\t\tonRequestFavoritesCurrentConditions: (favCities) => dispatch(requestFavoritesCurrentConditions(favCities))\r\n\t}\r\n}\r\n\r\nclass Favorites extends Component {\r\n\tcomponentDidMount() {\r\n\t\tlet favCities = JSON.parse(localStorage.getItem('Favorite Cities'));\r\n\t\tif (favCities) {\r\n\t\t\tthis.props.clearData();\r\n\t\t\tthis.props.onRequestFavoritesCurrentConditions(favCities);\r\n\t\t}\r\n\t}\r\n\r\n\thandleOnClick = (cityData) =>{\r\n\t\tthis.props.onLocationChange({\r\n\t\t\tkey: cityData.location.key,\r\n\t\t\tcity: cityData.location.city\r\n\t\t});\r\n\t\tthis.props.onRouteChange('home');\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { favCitiesData, error } = this.props;\r\n\t\t\r\n\t\tlet fetchError;\r\n\t\tif (error) {\r\n\t\t\tfetchError = (\r\n\t\t\t\t<HandleError\r\n\t\t\t\t\tname={`Error: ${error}!`}\r\n\t\t\t\t\tdescription={`Failed to fetch data from the server.`}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t\treturn (\r\n\t\t\t\t<div className='error-msg'>\r\n\t\t\t\t\t{fetchError}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif (!favCitiesData.length) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tlet cards = favCitiesData.map((cityData) => (\r\n\t\t\t<Card className='favorites-card' key={cityData.location.key}>\r\n\t\t\t\t<Card.Body>\r\n\t\t\t\t\t<Card.Title\r\n\t\t\t\t\t\tclassName='favorites-card-title'\r\n\t\t\t\t\t\tonClick={() => this.handleOnClick(cityData)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{cityData.location.city}\r\n\t\t\t\t\t</Card.Title>\r\n\t\t\t\t\t<Card.Subtitle className=\"mb-2 favorites-card-subtitle\">\r\n\t\t\t\t\t\t<h3>{cityData.degreesC}&deg;C</h3>\r\n\t\t\t\t\t\t<h6>{cityData.weatherText}</h6>\r\n\t\t\t\t\t</Card.Subtitle>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t</Card>\r\n\t\t));\r\n\r\n\t\treturn (\r\n\t\t\t<div className='favorites-cards'>\r\n\t\t\t\t{ cards }\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorites);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Navigation from '../components/Navigation/Navigation';\r\nimport SearchField from '../components/SearchField/SearchField';\r\nimport WeatherDetails from '../components/WeatherDetails/WeatherDetails';\r\nimport Favorites from '../components/Favorites/Favorites';\r\nimport HandleError from '../components/HandleError';\r\nimport { setRoute, setLocation, requestCurrentPosition } from '../actions';\r\n\r\nimport './App.css';\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\troute: state.changeRoute.route,\r\n\t\tisPending: state.changeLocation.isPending,\r\n\t\tlocation: state.changeLocation.location,\r\n\t\terror: state.changeLocation.error\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tonRouteChange: (route) => dispatch(setRoute(route)),\r\n\t\tonLocationChange: (location) => dispatch(setLocation(location)),\r\n\t\tonRequestCurrentPosition: () => dispatch(requestCurrentPosition())\r\n\t}\r\n}\r\n\r\nclass App extends Component {\r\n\tcomponentDidMount() {\r\n\t\tthis.props.onRequestCurrentPosition();\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { route, onRouteChange, location, onLocationChange, error } = this.props;\r\n\r\n\t\tlet fetchError;\r\n\t\tif (error) {\r\n\t\t\tfetchError = (\r\n\t\t\t\t<HandleError\r\n\t\t\t\t\tname={`Error: ${error}!`}\r\n\t\t\t\t\tdescription={`Failed to fetch data from the server.`}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t\treturn (\r\n\t\t\t\t<div className='error-msg'>\r\n\t\t\t\t\t{fetchError}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Navigation\r\n\t\t\t\t\tonRouteChange={onRouteChange}\r\n\t\t\t\t\troute={route}\r\n\t\t\t\t/>\r\n\t\t\t\t{\r\n\t\t\t\t\troute === 'home' ?\r\n\t\t\t\t\t\t<div className=\"App\">\r\n\t\t\t\t\t\t\t<h1>Weather Forecast</h1>\r\n\t\t\t\t\t\t\t<SearchField onLocationChange={onLocationChange} />\r\n\t\t\t\t\t\t\t<WeatherDetails location={location} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t: <div className=\"App\">\r\n\t\t\t\t\t\t\t<h1>My Favorites</h1>\r\n\t\t\t\t\t\t\t<Favorites\r\n\t\t\t\t\t\t\t\tonLocationChange={onLocationChange}\r\n\t\t\t\t\t\t\t\tonRouteChange={onRouteChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","/* App component */\r\nimport {\r\n\tSET_ROUTE,\r\n\tSET_LOCATION,\r\n\tREQUEST_CURRENT_POSITION_PENDING,\r\n\tREQUEST_CURRENT_POSITION_SUCCESS,\r\n\tREQUEST_CURRENT_POSITION_FAILED\r\n} from './actionTypes';\r\n\r\n/* SearchField component */\r\nimport {\r\n\tUPDATE_INPUT,\r\n\tREQUEST_SEARCH_OPTIONS_PENDING,\r\n\tREQUEST_SEARCH_OPTIONS_SUCCESS,\r\n\tREQUEST_SEARCH_OPTIONS_FAILED\r\n} from './actionTypes';\r\n\r\n/* CurrentWeather component */\r\nimport {\r\n\tREQUEST_CURRENT_WEATHER_PENDING,\r\n\tREQUEST_CURRENT_WEATHER_SUCCESS,\r\n\tREQUEST_CURRENT_WEATHER_FAILED\r\n} from './actionTypes';\r\n\r\n/* FiveDayForecast component */\r\nimport {\r\n\tREQUEST_FIVE_DAY_FORECAST_PENDING,\r\n\tREQUEST_FIVE_DAY_FORECAST_SUCCESS,\r\n\tREQUEST_FIVE_DAY_FORECAST_FAILED\r\n} from './actionTypes';\r\n\r\n/* Favorites component */\r\nimport {\r\n\tCLEAR_DATA,\r\n\tREQUEST_FAVORITES_CURRENT_CONDITIONS_PENDING,\r\n\tREQUEST_FAVORITES_CURRENT_CONDITIONS_SUCCESS,\r\n\tREQUEST_FAVORITES_CURRENT_CONDITIONS_FAILED\r\n} from './actionTypes';\r\n\r\n/* App component */\r\n\r\nconst initialStateRoute = {\r\n\troute: 'home'\r\n};\r\n\r\nexport const changeRoute = (state = initialStateRoute, action) => {\r\n\tswitch(action.type) {\r\n\t\tcase SET_ROUTE:\r\n\t\t\treturn { ...state, ...{ route: action.payload } };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nconst defaultLocation = {\r\n\tkey: '215854',\r\n\tcity: 'Tel Aviv'\r\n};\r\n\r\nconst initialStateLocation = {\r\n\tisPending: false,\r\n\tlocation: defaultLocation,\r\n\terror: ''\r\n};\r\n\r\nexport const changeLocation = (state = initialStateLocation, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_LOCATION:\r\n\t\t\treturn { ...state, ...{ location: action.payload } };\r\n\t\tcase REQUEST_CURRENT_POSITION_PENDING:\r\n\t\t\treturn { ...state, ...{ isPending: true } };\r\n\t\tcase REQUEST_CURRENT_POSITION_SUCCESS:\r\n\t\t\treturn { ...state, ...{ location: action.payload, isPending: false } };\r\n\t\tcase REQUEST_CURRENT_POSITION_FAILED:\r\n\t\t\treturn { ...state, ...{ error: action.payload, isPending: false } };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\n/* SearchField component */\r\n\r\nconst initialStateInput = {\r\n\tquery: '',\r\n\tisLoading: false,\r\n\toptions: [],\r\n\terror: ''\r\n};\r\n\r\nexport const changeInput = (state = initialStateInput, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase UPDATE_INPUT:\r\n\t\t\treturn { ...state, ...{ query: action.payload } };\r\n\t\tcase REQUEST_SEARCH_OPTIONS_PENDING:\r\n\t\t\treturn { ...state, ...{ isLoading: true } };\r\n\t\tcase REQUEST_SEARCH_OPTIONS_SUCCESS:\r\n\t\t\treturn { ...state, ...{ options: action.payload, isLoading: false } };\r\n\t\tcase REQUEST_SEARCH_OPTIONS_FAILED:\r\n\t\t\treturn { ...state, ...{ error: action.payload, isLoading: false } };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\n/* CurrentWeather component */\r\n\r\nconst initialStateCurrentWeather = {\r\n\tisPending: false,\r\n\tcurrentWeatherData: {\r\n\t\tcity: '',\r\n\t\tdegreesC: null,\r\n\t\tweatherText: ''\r\n\t},\r\n\terror: ''\r\n};\r\n\r\nexport const changeCurrentWeather = (state = initialStateCurrentWeather, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase REQUEST_CURRENT_WEATHER_PENDING:\r\n\t\t\treturn { ...state, ...{ isPending: true } };\r\n\t\tcase REQUEST_CURRENT_WEATHER_SUCCESS:\r\n\t\t\treturn { ...state, ...{ currentWeatherData: action.payload, isPending: false } };\r\n\t\tcase REQUEST_CURRENT_WEATHER_FAILED:\r\n\t\t\treturn { ...state, ...{ error: action.payload, isPending: false } };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\n/* FiveDayForecast component */\r\n\r\nconst initialStateFiveDayForecast = {\r\n\tisPending: false,\r\n\tDailyForecasts: [],\r\n\terror: ''\r\n};\r\n\r\nexport const changeFiveDayForecast = (state = initialStateFiveDayForecast, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase REQUEST_FIVE_DAY_FORECAST_PENDING:\r\n\t\t\treturn { ...state, ...{ isPending: true } };\r\n\t\tcase REQUEST_FIVE_DAY_FORECAST_SUCCESS:\r\n\t\t\treturn { ...state, ...{ DailyForecasts: action.payload, isPending: false } };\r\n\t\tcase REQUEST_FIVE_DAY_FORECAST_FAILED:\r\n\t\t\treturn { ...state, ...{ error: action.payload, isPending: false } };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\n/* Favorites component */\r\n\r\nconst initialStateFavorites = {\r\n\tisPending: false,\r\n\tfavCitiesData: [],\r\n\terror: ''\r\n};\r\n\r\nexport const updateFavorites = (state = initialStateFavorites, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase CLEAR_DATA:\r\n\t\t\treturn { ...state, ...{ favCitiesData: [] } };\r\n\t\tcase REQUEST_FAVORITES_CURRENT_CONDITIONS_PENDING:\r\n\t\t\treturn { ...state, ...{ isPending: true } };\r\n\t\tcase REQUEST_FAVORITES_CURRENT_CONDITIONS_SUCCESS:\r\n\t\t\treturn { ...state, ...{ favCitiesData: [...state.favCitiesData, action.payload ], isPending: false } };\r\n\t\tcase REQUEST_FAVORITES_CURRENT_CONDITIONS_FAILED:\r\n\t\t\treturn { ...state, ...{ error: action.payload, isPending: false } };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { createLogger } from 'redux-logger'\r\nimport {\r\n\tchangeRoute,\r\n\tchangeLocation,\r\n\tchangeInput,\r\n\tchangeCurrentWeather,\r\n\tchangeFiveDayForecast,\r\n\tupdateFavorites\r\n} from './reducers';\r\n\r\nconst logger = createLogger();\r\nconst rootReducer = combineReducers({\r\n\tchangeRoute,\r\n\tchangeLocation,\r\n\tchangeInput,\r\n\tchangeCurrentWeather,\r\n\tchangeFiveDayForecast,\r\n\tupdateFavorites\r\n});\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/HeartFull.efb08012.svg\";"],"sourceRoot":""}